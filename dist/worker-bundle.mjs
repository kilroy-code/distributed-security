var e=crypto,t=crypto;const r=e=>e instanceof CryptoKey,a=async(e,r)=>{const a=`SHA-${e.slice(-3)}`;return new Uint8Array(await t.subtle.digest(a,r))},n=new TextEncoder,i=new TextDecoder,s=2**32;function o(...e){const t=e.reduce(((e,{length:t})=>e+t),0),r=new Uint8Array(t);let a=0;for(const t of e)r.set(t,a),a+=t.length;return r}function c(e,t,r){if(t<0||t>=s)throw new RangeError(`value must be >= 0 and <= ${s-1}. Received ${t}`);e.set([t>>>24,t>>>16,t>>>8,255&t],r)}function d(e){const t=Math.floor(e/s),r=e%s,a=new Uint8Array(8);return c(a,t,0),c(a,r,4),a}function p(e){const t=new Uint8Array(4);return c(t,e),t}function h(e){return o(p(e.length),e)}const y=e=>(e=>{let t=e;"string"==typeof t&&(t=n.encode(t));const r=[];for(let e=0;e<t.length;e+=32768)r.push(String.fromCharCode.apply(null,t.subarray(e,e+32768)));return btoa(r.join(""))})(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"),l=e=>{let t=e;t instanceof Uint8Array&&(t=i.decode(t)),t=t.replace(/-/g,"+").replace(/_/g,"/").replace(/\s/g,"");try{return(e=>{const t=atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;e++)r[e]=t.charCodeAt(e);return r})(t)}catch{throw new TypeError("The input to be decoded is not correctly encoded.")}};class u extends Error{static get code(){return"ERR_JOSE_GENERIC"}constructor(e){super(e),this.code="ERR_JOSE_GENERIC",this.name=this.constructor.name,Error.captureStackTrace?.(this,this.constructor)}}class w extends u{constructor(){super(...arguments),this.code="ERR_JOSE_ALG_NOT_ALLOWED"}static get code(){return"ERR_JOSE_ALG_NOT_ALLOWED"}}class g extends u{constructor(){super(...arguments),this.code="ERR_JOSE_NOT_SUPPORTED"}static get code(){return"ERR_JOSE_NOT_SUPPORTED"}}class f extends u{constructor(){super(...arguments),this.code="ERR_JWE_DECRYPTION_FAILED",this.message="decryption operation failed"}static get code(){return"ERR_JWE_DECRYPTION_FAILED"}}class m extends u{constructor(){super(...arguments),this.code="ERR_JWE_INVALID"}static get code(){return"ERR_JWE_INVALID"}}class E extends u{constructor(){super(...arguments),this.code="ERR_JWS_INVALID"}static get code(){return"ERR_JWS_INVALID"}}class S extends u{constructor(){super(...arguments),this.code="ERR_JWS_SIGNATURE_VERIFICATION_FAILED",this.message="signature verification failed"}static get code(){return"ERR_JWS_SIGNATURE_VERIFICATION_FAILED"}}var A=t.getRandomValues.bind(t);function v(e){switch(e){case"A128GCM":case"A128GCMKW":case"A192GCM":case"A192GCMKW":case"A256GCM":case"A256GCMKW":return 96;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return 128;default:throw new g(`Unsupported JWE Algorithm: ${e}`)}}const H=(e,t)=>{if(t.length<<3!==v(e))throw new m("Invalid Initialization Vector length")},b=(e,t)=>{const r=e.byteLength<<3;if(r!==t)throw new m(`Invalid Content Encryption Key length. Expected ${t} bits, got ${r} bits`)};function K(e,t="algorithm.name"){return new TypeError(`CryptoKey does not support this operation, its ${t} must be ${e}`)}function P(e,t){return e.name===t}function C(e){return parseInt(e.name.slice(4),10)}function _(e,t){if(t.length&&!t.some((t=>e.usages.includes(t)))){let e="CryptoKey does not support this operation, its usages must include ";if(t.length>2){const r=t.pop();e+=`one of ${t.join(", ")}, or ${r}.`}else 2===t.length?e+=`one of ${t[0]} or ${t[1]}.`:e+=`${t[0]}.`;throw new TypeError(e)}}function W(e,t,...r){switch(t){case"HS256":case"HS384":case"HS512":{if(!P(e.algorithm,"HMAC"))throw K("HMAC");const r=parseInt(t.slice(2),10);if(C(e.algorithm.hash)!==r)throw K(`SHA-${r}`,"algorithm.hash");break}case"RS256":case"RS384":case"RS512":{if(!P(e.algorithm,"RSASSA-PKCS1-v1_5"))throw K("RSASSA-PKCS1-v1_5");const r=parseInt(t.slice(2),10);if(C(e.algorithm.hash)!==r)throw K(`SHA-${r}`,"algorithm.hash");break}case"PS256":case"PS384":case"PS512":{if(!P(e.algorithm,"RSA-PSS"))throw K("RSA-PSS");const r=parseInt(t.slice(2),10);if(C(e.algorithm.hash)!==r)throw K(`SHA-${r}`,"algorithm.hash");break}case"EdDSA":if("Ed25519"!==e.algorithm.name&&"Ed448"!==e.algorithm.name)throw K("Ed25519 or Ed448");break;case"ES256":case"ES384":case"ES512":{if(!P(e.algorithm,"ECDSA"))throw K("ECDSA");const r=function(e){switch(e){case"ES256":return"P-256";case"ES384":return"P-384";case"ES512":return"P-521";default:throw new Error("unreachable")}}(t);if(e.algorithm.namedCurve!==r)throw K(r,"algorithm.namedCurve");break}default:throw new TypeError("CryptoKey does not support this operation")}_(e,r)}function k(e,t,...r){switch(t){case"A128GCM":case"A192GCM":case"A256GCM":{if(!P(e.algorithm,"AES-GCM"))throw K("AES-GCM");const r=parseInt(t.slice(1,4),10);if(e.algorithm.length!==r)throw K(r,"algorithm.length");break}case"A128KW":case"A192KW":case"A256KW":{if(!P(e.algorithm,"AES-KW"))throw K("AES-KW");const r=parseInt(t.slice(1,4),10);if(e.algorithm.length!==r)throw K(r,"algorithm.length");break}case"ECDH":switch(e.algorithm.name){case"ECDH":case"X25519":case"X448":break;default:throw K("ECDH, X25519, or X448")}break;case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":if(!P(e.algorithm,"PBKDF2"))throw K("PBKDF2");break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":{if(!P(e.algorithm,"RSA-OAEP"))throw K("RSA-OAEP");const r=parseInt(t.slice(9),10)||1;if(C(e.algorithm.hash)!==r)throw K(`SHA-${r}`,"algorithm.hash");break}default:throw new TypeError("CryptoKey does not support this operation")}_(e,r)}function U(e,t,...r){if(r.length>2){const t=r.pop();e+=`one of type ${r.join(", ")}, or ${t}.`}else 2===r.length?e+=`one of type ${r[0]} or ${r[1]}.`:e+=`of type ${r[0]}.`;return null==t?e+=` Received ${t}`:"function"==typeof t&&t.name?e+=` Received function ${t.name}`:"object"==typeof t&&null!=t&&t.constructor?.name&&(e+=` Received an instance of ${t.constructor.name}`),e}var J=(e,...t)=>U("Key must be ",e,...t);function R(e,t,...r){return U(`Key for the ${e} algorithm must be `,t,...r)}var T=e=>r(e);const D=["CryptoKey"];async function O(e,r,a,n,i,s){if(!(r instanceof Uint8Array))throw new TypeError(J(r,"Uint8Array"));const c=parseInt(e.slice(1,4),10),p=await t.subtle.importKey("raw",r.subarray(c>>3),"AES-CBC",!1,["decrypt"]),h=await t.subtle.importKey("raw",r.subarray(0,c>>3),{hash:"SHA-"+(c<<1),name:"HMAC"},!1,["sign"]),y=o(s,n,a,d(s.length<<3)),l=new Uint8Array((await t.subtle.sign("HMAC",h,y)).slice(0,c>>3));let u,w;try{u=((e,t)=>{if(!(e instanceof Uint8Array))throw new TypeError("First argument must be a buffer");if(!(t instanceof Uint8Array))throw new TypeError("Second argument must be a buffer");if(e.length!==t.length)throw new TypeError("Input buffers must have the same length");const r=e.length;let a=0,n=-1;for(;++n<r;)a|=e[n]^t[n];return 0===a})(i,l)}catch{}if(!u)throw new f;try{w=new Uint8Array(await t.subtle.decrypt({iv:n,name:"AES-CBC"},p,a))}catch{}if(!w)throw new f;return w}const x=async(e,a,n,i,s,c)=>{if(!(r(a)||a instanceof Uint8Array))throw new TypeError(J(a,...D,"Uint8Array"));if(!i)throw new m("JWE Initialization Vector missing");if(!s)throw new m("JWE Authentication Tag missing");switch(H(e,i),e){case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return a instanceof Uint8Array&&b(a,parseInt(e.slice(-3),10)),O(e,a,n,i,s,c);case"A128GCM":case"A192GCM":case"A256GCM":return a instanceof Uint8Array&&b(a,parseInt(e.slice(1,4),10)),async function(e,r,a,n,i,s){let c;r instanceof Uint8Array?c=await t.subtle.importKey("raw",r,"AES-GCM",!1,["decrypt"]):(k(r,e,"decrypt"),c=r);try{return new Uint8Array(await t.subtle.decrypt({additionalData:s,iv:n,name:"AES-GCM",tagLength:128},c,o(a,i)))}catch{throw new f}}(e,a,n,i,s,c);default:throw new g("Unsupported JWE Content Encryption Algorithm")}},M=(...e)=>{const t=e.filter(Boolean);if(0===t.length||1===t.length)return!0;let r;for(const e of t){const t=Object.keys(e);if(r&&0!==r.size)for(const e of t){if(r.has(e))return!1;r.add(e)}else r=new Set(t)}return!0};function I(e){if("object"!=typeof(t=e)||null===t||"[object Object]"!==Object.prototype.toString.call(e))return!1;var t;if(null===Object.getPrototypeOf(e))return!0;let r=e;for(;null!==Object.getPrototypeOf(r);)r=Object.getPrototypeOf(r);return Object.getPrototypeOf(e)===r}const $=[{hash:"SHA-256",name:"HMAC"},!0,["sign"]];function j(e,t){if(e.algorithm.length!==parseInt(t.slice(1,4),10))throw new TypeError(`Invalid key size for alg: ${t}`)}function B(e,a,n){if(r(e))return k(e,a,n),e;if(e instanceof Uint8Array)return t.subtle.importKey("raw",e,"AES-KW",!0,[n]);throw new TypeError(J(e,...D,"Uint8Array"))}const G=async(e,r,a)=>{const n=await B(r,e,"wrapKey");j(n,e);const i=await t.subtle.importKey("raw",a,...$);return new Uint8Array(await t.subtle.wrapKey("raw",i,n,"AES-KW"))},F=async(e,r,a)=>{const n=await B(r,e,"unwrapKey");j(n,e);const i=await t.subtle.unwrapKey("raw",a,n,"AES-KW",...$);return new Uint8Array(await t.subtle.exportKey("raw",i))};async function N(e,i,s,c,d=new Uint8Array(0),y=new Uint8Array(0)){if(!r(e))throw new TypeError(J(e,...D));if(k(e,"ECDH"),!r(i))throw new TypeError(J(i,...D));k(i,"ECDH","deriveBits");const l=o(h(n.encode(s)),h(d),h(y),p(c));let u;u="X25519"===e.algorithm.name?256:"X448"===e.algorithm.name?448:Math.ceil(parseInt(e.algorithm.namedCurve.substr(-3),10)/8)<<3;return async function(e,t,r){const n=Math.ceil((t>>3)/32),i=new Uint8Array(32*n);for(let t=0;t<n;t++){const n=new Uint8Array(4+e.length+r.length);n.set(p(t+1)),n.set(e,4),n.set(r,4+e.length),i.set(await a("sha256",n),32*t)}return i.slice(0,t>>3)}(new Uint8Array(await t.subtle.deriveBits({name:e.algorithm.name,public:e},i,u)),c,l)}function L(e){if(!r(e))throw new TypeError(J(e,...D));return["P-256","P-384","P-521"].includes(e.algorithm.namedCurve)||"X25519"===e.algorithm.name||"X448"===e.algorithm.name}async function z(e,a,i,s){!function(e){if(!(e instanceof Uint8Array)||e.length<8)throw new m("PBES2 Salt Input must be 8 or more octets")}(e);const c=function(e,t){return o(n.encode(e),new Uint8Array([0]),t)}(a,e),d=parseInt(a.slice(13,16),10),p={hash:`SHA-${a.slice(8,11)}`,iterations:i,name:"PBKDF2",salt:c},h={length:d,name:"AES-KW"},y=await function(e,a){if(e instanceof Uint8Array)return t.subtle.importKey("raw",e,"PBKDF2",!1,["deriveBits"]);if(r(e))return k(e,a,"deriveBits","deriveKey"),e;throw new TypeError(J(e,...D,"Uint8Array"))}(s,a);if(y.usages.includes("deriveBits"))return new Uint8Array(await t.subtle.deriveBits(p,y,d));if(y.usages.includes("deriveKey"))return t.subtle.deriveKey(p,y,h,!1,["wrapKey","unwrapKey"]);throw new TypeError('PBKDF2 key "usages" must include "deriveBits" or "deriveKey"')}const V=async(e,t,r,a,n)=>{const i=await z(n,e,a,t);return F(e.slice(-6),i,r)};function X(e){switch(e){case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":return"RSA-OAEP";default:throw new g(`alg ${e} is not supported either by JOSE or your javascript runtime`)}}var q=(e,t)=>{if(e.startsWith("RS")||e.startsWith("PS")){const{modulusLength:r}=t.algorithm;if("number"!=typeof r||r<2048)throw new TypeError(`${e} requires key modulusLength to be 2048 bits or larger`)}};const Y=async(e,a,n)=>{if(!r(a))throw new TypeError(J(a,...D));if(k(a,e,"decrypt","unwrapKey"),q(e,a),a.usages.includes("decrypt"))return new Uint8Array(await t.subtle.decrypt(X(e),a,n));if(a.usages.includes("unwrapKey")){const r=await t.subtle.unwrapKey("raw",n,a,X(e),...$);return new Uint8Array(await t.subtle.exportKey("raw",r))}throw new TypeError('RSA-OAEP key "usages" must include "decrypt" or "unwrapKey" for this operation')};function Q(e){switch(e){case"A128GCM":return 128;case"A192GCM":return 192;case"A256GCM":case"A128CBC-HS256":return 256;case"A192CBC-HS384":return 384;case"A256CBC-HS512":return 512;default:throw new g(`Unsupported JWE Algorithm: ${e}`)}}var Z=e=>A(new Uint8Array(Q(e)>>3));var ee=async e=>{if(!e.alg)throw new TypeError('"alg" argument is required when "jwk.alg" is not present');const{algorithm:r,keyUsages:a}=function(e){let t,r;switch(e.kty){case"RSA":switch(e.alg){case"PS256":case"PS384":case"PS512":t={name:"RSA-PSS",hash:`SHA-${e.alg.slice(-3)}`},r=e.d?["sign"]:["verify"];break;case"RS256":case"RS384":case"RS512":t={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${e.alg.slice(-3)}`},r=e.d?["sign"]:["verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":t={name:"RSA-OAEP",hash:`SHA-${parseInt(e.alg.slice(-3),10)||1}`},r=e.d?["decrypt","unwrapKey"]:["encrypt","wrapKey"];break;default:throw new g('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"EC":switch(e.alg){case"ES256":t={name:"ECDSA",namedCurve:"P-256"},r=e.d?["sign"]:["verify"];break;case"ES384":t={name:"ECDSA",namedCurve:"P-384"},r=e.d?["sign"]:["verify"];break;case"ES512":t={name:"ECDSA",namedCurve:"P-521"},r=e.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":t={name:"ECDH",namedCurve:e.crv},r=e.d?["deriveBits"]:[];break;default:throw new g('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"OKP":switch(e.alg){case"EdDSA":t={name:e.crv},r=e.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":t={name:e.crv},r=e.d?["deriveBits"]:[];break;default:throw new g('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;default:throw new g('Invalid or unsupported JWK "kty" (Key Type) Parameter value')}return{algorithm:t,keyUsages:r}}(e),n=[r,e.ext??!1,e.key_ops??a],i={...e};return delete i.alg,delete i.use,t.subtle.importKey("jwk",i,...n)};async function te(e,t){if(!I(e))throw new TypeError("JWK must be an object");switch(t||(t=e.alg),e.kty){case"oct":if("string"!=typeof e.k||!e.k)throw new TypeError('missing "k" (Key Value) Parameter value');return l(e.k);case"RSA":if(void 0!==e.oth)throw new g('RSA JWK "oth" (Other Primes Info) Parameter value is not supported');case"EC":case"OKP":return ee({...e,alg:t});default:throw new g('Unsupported "kty" (Key Type) Parameter value')}}const re=(e,t,r)=>{e.startsWith("HS")||"dir"===e||e.startsWith("PBES2")||/^A\d{3}(?:GCM)?KW$/.test(e)?((e,t)=>{if(!(t instanceof Uint8Array)){if(!T(t))throw new TypeError(R(e,t,...D,"Uint8Array"));if("secret"!==t.type)throw new TypeError(`${D.join(" or ")} instances for symmetric algorithms must be of type "secret"`)}})(e,t):((e,t,r)=>{if(!T(t))throw new TypeError(R(e,t,...D));if("secret"===t.type)throw new TypeError(`${D.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);if("sign"===r&&"public"===t.type)throw new TypeError(`${D.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);if("decrypt"===r&&"public"===t.type)throw new TypeError(`${D.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);if(t.algorithm&&"verify"===r&&"private"===t.type)throw new TypeError(`${D.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);if(t.algorithm&&"encrypt"===r&&"private"===t.type)throw new TypeError(`${D.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`)})(e,t,r)};const ae=async(e,a,n,i,s)=>{if(!(r(n)||n instanceof Uint8Array))throw new TypeError(J(n,...D,"Uint8Array"));switch(i?H(e,i):i=A(new Uint8Array(v(e)>>3)),e){case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return n instanceof Uint8Array&&b(n,parseInt(e.slice(-3),10)),async function(e,r,a,n,i){if(!(a instanceof Uint8Array))throw new TypeError(J(a,"Uint8Array"));const s=parseInt(e.slice(1,4),10),c=await t.subtle.importKey("raw",a.subarray(s>>3),"AES-CBC",!1,["encrypt"]),p=await t.subtle.importKey("raw",a.subarray(0,s>>3),{hash:"SHA-"+(s<<1),name:"HMAC"},!1,["sign"]),h=new Uint8Array(await t.subtle.encrypt({iv:n,name:"AES-CBC"},c,r)),y=o(i,n,h,d(i.length<<3));return{ciphertext:h,tag:new Uint8Array((await t.subtle.sign("HMAC",p,y)).slice(0,s>>3)),iv:n}}(e,a,n,i,s);case"A128GCM":case"A192GCM":case"A256GCM":return n instanceof Uint8Array&&b(n,parseInt(e.slice(1,4),10)),async function(e,r,a,n,i){let s;a instanceof Uint8Array?s=await t.subtle.importKey("raw",a,"AES-GCM",!1,["encrypt"]):(k(a,e,"encrypt"),s=a);const o=new Uint8Array(await t.subtle.encrypt({additionalData:i,iv:n,name:"AES-GCM",tagLength:128},s,r)),c=o.slice(-16);return{ciphertext:o.slice(0,-16),tag:c,iv:n}}(e,a,n,i,s);default:throw new g("Unsupported JWE Content Encryption Algorithm")}};async function ne(e,t,r,a,n){switch(re(e,t,"decrypt"),e){case"dir":if(void 0!==r)throw new m("Encountered unexpected JWE Encrypted Key");return t;case"ECDH-ES":if(void 0!==r)throw new m("Encountered unexpected JWE Encrypted Key");case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":{if(!I(a.epk))throw new m('JOSE Header "epk" (Ephemeral Public Key) missing or invalid');if(!L(t))throw new g("ECDH with the provided key is not allowed or not supported by your javascript runtime");const n=await te(a.epk,e);let i,s;if(void 0!==a.apu){if("string"!=typeof a.apu)throw new m('JOSE Header "apu" (Agreement PartyUInfo) invalid');try{i=l(a.apu)}catch{throw new m("Failed to base64url decode the apu")}}if(void 0!==a.apv){if("string"!=typeof a.apv)throw new m('JOSE Header "apv" (Agreement PartyVInfo) invalid');try{s=l(a.apv)}catch{throw new m("Failed to base64url decode the apv")}}const o=await N(n,t,"ECDH-ES"===e?a.enc:e,"ECDH-ES"===e?Q(a.enc):parseInt(e.slice(-5,-2),10),i,s);if("ECDH-ES"===e)return o;if(void 0===r)throw new m("JWE Encrypted Key missing");return F(e.slice(-6),o,r)}case"RSA1_5":case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":if(void 0===r)throw new m("JWE Encrypted Key missing");return Y(e,t,r);case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":{if(void 0===r)throw new m("JWE Encrypted Key missing");if("number"!=typeof a.p2c)throw new m('JOSE Header "p2c" (PBES2 Count) missing or invalid');const i=n?.maxPBES2Count||1e4;if(a.p2c>i)throw new m('JOSE Header "p2c" (PBES2 Count) out is of acceptable bounds');if("string"!=typeof a.p2s)throw new m('JOSE Header "p2s" (PBES2 Salt) missing or invalid');let s;try{s=l(a.p2s)}catch{throw new m("Failed to base64url decode the p2s")}return V(e,t,r,a.p2c,s)}case"A128KW":case"A192KW":case"A256KW":if(void 0===r)throw new m("JWE Encrypted Key missing");return F(e,t,r);case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":{if(void 0===r)throw new m("JWE Encrypted Key missing");if("string"!=typeof a.iv)throw new m('JOSE Header "iv" (Initialization Vector) missing or invalid');if("string"!=typeof a.tag)throw new m('JOSE Header "tag" (Authentication Tag) missing or invalid');let n,i;try{n=l(a.iv)}catch{throw new m("Failed to base64url decode the iv")}try{i=l(a.tag)}catch{throw new m("Failed to base64url decode the tag")}return async function(e,t,r,a,n){const i=e.slice(0,7);return x(i,t,r,a,n,new Uint8Array(0))}(e,t,r,n,i)}default:throw new g('Invalid or unsupported "alg" (JWE Algorithm) header value')}}function ie(e,t,r,a,n){if(void 0!==n.crit&&void 0===a?.crit)throw new e('"crit" (Critical) Header Parameter MUST be integrity protected');if(!a||void 0===a.crit)return new Set;if(!Array.isArray(a.crit)||0===a.crit.length||a.crit.some((e=>"string"!=typeof e||0===e.length)))throw new e('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');let i;i=void 0!==r?new Map([...Object.entries(r),...t.entries()]):t;for(const t of a.crit){if(!i.has(t))throw new g(`Extension Header Parameter "${t}" is not recognized`);if(void 0===n[t])throw new e(`Extension Header Parameter "${t}" is missing`);if(i.get(t)&&void 0===a[t])throw new e(`Extension Header Parameter "${t}" MUST be integrity protected`)}return new Set(a.crit)}const se=(e,t)=>{if(void 0!==t&&(!Array.isArray(t)||t.some((e=>"string"!=typeof e))))throw new TypeError(`"${e}" option must be an array of strings`);if(t)return new Set(t)};async function oe(e,t,r){if(!I(e))throw new m("Flattened JWE must be an object");if(void 0===e.protected&&void 0===e.header&&void 0===e.unprotected)throw new m("JOSE Header missing");if(void 0!==e.iv&&"string"!=typeof e.iv)throw new m("JWE Initialization Vector incorrect type");if("string"!=typeof e.ciphertext)throw new m("JWE Ciphertext missing or incorrect type");if(void 0!==e.tag&&"string"!=typeof e.tag)throw new m("JWE Authentication Tag incorrect type");if(void 0!==e.protected&&"string"!=typeof e.protected)throw new m("JWE Protected Header incorrect type");if(void 0!==e.encrypted_key&&"string"!=typeof e.encrypted_key)throw new m("JWE Encrypted Key incorrect type");if(void 0!==e.aad&&"string"!=typeof e.aad)throw new m("JWE AAD incorrect type");if(void 0!==e.header&&!I(e.header))throw new m("JWE Shared Unprotected Header incorrect type");if(void 0!==e.unprotected&&!I(e.unprotected))throw new m("JWE Per-Recipient Unprotected Header incorrect type");let a;if(e.protected)try{const t=l(e.protected);a=JSON.parse(i.decode(t))}catch{throw new m("JWE Protected Header is invalid")}if(!M(a,e.header,e.unprotected))throw new m("JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint");const s={...a,...e.header,...e.unprotected};if(ie(m,new Map,r?.crit,a,s),void 0!==s.zip)throw new g('JWE "zip" (Compression Algorithm) Header Parameter is not supported.');const{alg:c,enc:d}=s;if("string"!=typeof c||!c)throw new m("missing JWE Algorithm (alg) in JWE Header");if("string"!=typeof d||!d)throw new m("missing JWE Encryption Algorithm (enc) in JWE Header");const p=r&&se("keyManagementAlgorithms",r.keyManagementAlgorithms),h=r&&se("contentEncryptionAlgorithms",r.contentEncryptionAlgorithms);if(p&&!p.has(c)||!p&&c.startsWith("PBES2"))throw new w('"alg" (Algorithm) Header Parameter value not allowed');if(h&&!h.has(d))throw new w('"enc" (Encryption Algorithm) Header Parameter value not allowed');let y;if(void 0!==e.encrypted_key)try{y=l(e.encrypted_key)}catch{throw new m("Failed to base64url decode the encrypted_key")}let u,f,E,S=!1;"function"==typeof t&&(t=await t(a,e),S=!0);try{u=await ne(c,t,y,s,r)}catch(e){if(e instanceof TypeError||e instanceof m||e instanceof g)throw e;u=Z(d)}if(void 0!==e.iv)try{f=l(e.iv)}catch{throw new m("Failed to base64url decode the iv")}if(void 0!==e.tag)try{E=l(e.tag)}catch{throw new m("Failed to base64url decode the tag")}const A=n.encode(e.protected??"");let v,H;v=void 0!==e.aad?o(A,n.encode("."),n.encode(e.aad)):A;try{H=l(e.ciphertext)}catch{throw new m("Failed to base64url decode the ciphertext")}const b={plaintext:await x(d,u,H,f,E,v)};if(void 0!==e.protected&&(b.protectedHeader=a),void 0!==e.aad)try{b.additionalAuthenticatedData=l(e.aad)}catch{throw new m("Failed to base64url decode the aad")}return void 0!==e.unprotected&&(b.sharedUnprotectedHeader=e.unprotected),void 0!==e.header&&(b.unprotectedHeader=e.header),S?{...b,key:t}:b}var ce=async e=>{if(e instanceof Uint8Array)return{kty:"oct",k:y(e)};if(!r(e))throw new TypeError(J(e,...D,"Uint8Array"));if(!e.extractable)throw new TypeError("non-extractable CryptoKey cannot be exported as a JWK");const{ext:a,key_ops:n,alg:i,use:s,...o}=await t.subtle.exportKey("jwk",e);return o};async function de(e){return ce(e)}async function pe(e,a,n,i,s={}){let o,c,d;switch(re(e,n,"encrypt"),e){case"dir":d=n;break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":{if(!L(n))throw new g("ECDH with the provided key is not allowed or not supported by your javascript runtime");const{apu:p,apv:h}=s;let{epk:l}=s;l||(l=(await async function(e){if(!r(e))throw new TypeError(J(e,...D));return t.subtle.generateKey(e.algorithm,!0,["deriveBits"])}(n)).privateKey);const{x:u,y:w,crv:f,kty:m}=await de(l),E=await N(n,l,"ECDH-ES"===e?a:e,"ECDH-ES"===e?Q(a):parseInt(e.slice(-5,-2),10),p,h);if(c={epk:{x:u,crv:f,kty:m}},"EC"===m&&(c.epk.y=w),p&&(c.apu=y(p)),h&&(c.apv=y(h)),"ECDH-ES"===e){d=E;break}d=i||Z(a);const S=e.slice(-6);o=await G(S,E,d);break}case"RSA1_5":case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":d=i||Z(a),o=await(async(e,a,n)=>{if(!r(a))throw new TypeError(J(a,...D));if(k(a,e,"encrypt","wrapKey"),q(e,a),a.usages.includes("encrypt"))return new Uint8Array(await t.subtle.encrypt(X(e),a,n));if(a.usages.includes("wrapKey")){const r=await t.subtle.importKey("raw",n,...$);return new Uint8Array(await t.subtle.wrapKey("raw",r,a,X(e)))}throw new TypeError('RSA-OAEP key "usages" must include "encrypt" or "wrapKey" for this operation')})(e,n,d);break;case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":{d=i||Z(a);const{p2c:t,p2s:r}=s;({encryptedKey:o,...c}=await(async(e,t,r,a=2048,n=A(new Uint8Array(16)))=>{const i=await z(n,e,a,t);return{encryptedKey:await G(e.slice(-6),i,r),p2c:a,p2s:y(n)}})(e,n,d,t,r));break}case"A128KW":case"A192KW":case"A256KW":d=i||Z(a),o=await G(e,n,d);break;case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":{d=i||Z(a);const{iv:t}=s;({encryptedKey:o,...c}=await async function(e,t,r,a){const n=e.slice(0,7),i=await ae(n,r,t,a,new Uint8Array(0));return{encryptedKey:i.ciphertext,iv:y(i.iv),tag:y(i.tag)}}(e,n,d,t));break}default:throw new g('Invalid or unsupported "alg" (JWE Algorithm) header value')}return{cek:d,encryptedKey:o,parameters:c}}const he=Symbol();class ye{constructor(e){if(!(e instanceof Uint8Array))throw new TypeError("plaintext must be an instance of Uint8Array");this._plaintext=e}setKeyManagementParameters(e){if(this._keyManagementParameters)throw new TypeError("setKeyManagementParameters can only be called once");return this._keyManagementParameters=e,this}setProtectedHeader(e){if(this._protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this._protectedHeader=e,this}setSharedUnprotectedHeader(e){if(this._sharedUnprotectedHeader)throw new TypeError("setSharedUnprotectedHeader can only be called once");return this._sharedUnprotectedHeader=e,this}setUnprotectedHeader(e){if(this._unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this._unprotectedHeader=e,this}setAdditionalAuthenticatedData(e){return this._aad=e,this}setContentEncryptionKey(e){if(this._cek)throw new TypeError("setContentEncryptionKey can only be called once");return this._cek=e,this}setInitializationVector(e){if(this._iv)throw new TypeError("setInitializationVector can only be called once");return this._iv=e,this}async encrypt(e,t){if(!this._protectedHeader&&!this._unprotectedHeader&&!this._sharedUnprotectedHeader)throw new m("either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()");if(!M(this._protectedHeader,this._unprotectedHeader,this._sharedUnprotectedHeader))throw new m("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");const r={...this._protectedHeader,...this._unprotectedHeader,...this._sharedUnprotectedHeader};if(ie(m,new Map,t?.crit,this._protectedHeader,r),void 0!==r.zip)throw new g('JWE "zip" (Compression Algorithm) Header Parameter is not supported.');const{alg:a,enc:s}=r;if("string"!=typeof a||!a)throw new m('JWE "alg" (Algorithm) Header Parameter missing or invalid');if("string"!=typeof s||!s)throw new m('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');let c,d,p,h,l;if(this._cek&&("dir"===a||"ECDH-ES"===a))throw new TypeError(`setContentEncryptionKey cannot be called with JWE "alg" (Algorithm) Header ${a}`);{let r;({cek:d,encryptedKey:c,parameters:r}=await pe(a,s,e,this._cek,this._keyManagementParameters)),r&&(t&&he in t?this._unprotectedHeader?this._unprotectedHeader={...this._unprotectedHeader,...r}:this.setUnprotectedHeader(r):this._protectedHeader?this._protectedHeader={...this._protectedHeader,...r}:this.setProtectedHeader(r))}h=this._protectedHeader?n.encode(y(JSON.stringify(this._protectedHeader))):n.encode(""),this._aad?(l=y(this._aad),p=o(h,n.encode("."),n.encode(l))):p=h;const{ciphertext:u,tag:w,iv:f}=await ae(s,this._plaintext,d,this._iv,p),E={ciphertext:y(u)};return f&&(E.iv=y(f)),w&&(E.tag=y(w)),c&&(E.encrypted_key=y(c)),l&&(E.aad=l),this._protectedHeader&&(E.protected=i.decode(h)),this._sharedUnprotectedHeader&&(E.unprotected=this._sharedUnprotectedHeader),this._unprotectedHeader&&(E.header=this._unprotectedHeader),E}}class le{constructor(e,t,r){this.parent=e,this.key=t,this.options=r}setUnprotectedHeader(e){if(this.unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this.unprotectedHeader=e,this}addRecipient(...e){return this.parent.addRecipient(...e)}encrypt(...e){return this.parent.encrypt(...e)}done(){return this.parent}}class ue{constructor(e){this._recipients=[],this._plaintext=e}addRecipient(e,t){const r=new le(this,e,{crit:t?.crit});return this._recipients.push(r),r}setProtectedHeader(e){if(this._protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this._protectedHeader=e,this}setSharedUnprotectedHeader(e){if(this._unprotectedHeader)throw new TypeError("setSharedUnprotectedHeader can only be called once");return this._unprotectedHeader=e,this}setAdditionalAuthenticatedData(e){return this._aad=e,this}async encrypt(){if(!this._recipients.length)throw new m("at least one recipient must be added");if(1===this._recipients.length){const[e]=this._recipients,t=await new ye(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(e.unprotectedHeader).encrypt(e.key,{...e.options}),r={ciphertext:t.ciphertext,iv:t.iv,recipients:[{}],tag:t.tag};return t.aad&&(r.aad=t.aad),t.protected&&(r.protected=t.protected),t.unprotected&&(r.unprotected=t.unprotected),t.encrypted_key&&(r.recipients[0].encrypted_key=t.encrypted_key),t.header&&(r.recipients[0].header=t.header),r}let e;for(let t=0;t<this._recipients.length;t++){const r=this._recipients[t];if(!M(this._protectedHeader,this._unprotectedHeader,r.unprotectedHeader))throw new m("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");const a={...this._protectedHeader,...this._unprotectedHeader,...r.unprotectedHeader},{alg:n}=a;if("string"!=typeof n||!n)throw new m('JWE "alg" (Algorithm) Header Parameter missing or invalid');if("dir"===n||"ECDH-ES"===n)throw new m('"dir" and "ECDH-ES" alg may only be used with a single recipient');if("string"!=typeof a.enc||!a.enc)throw new m('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');if(e){if(e!==a.enc)throw new m('JWE "enc" (Encryption Algorithm) Header Parameter must be the same for all recipients')}else e=a.enc;if(ie(m,new Map,r.options.crit,this._protectedHeader,a),void 0!==a.zip)throw new g('JWE "zip" (Compression Algorithm) Header Parameter is not supported.')}const t=Z(e),r={ciphertext:"",iv:"",recipients:[],tag:""};for(let a=0;a<this._recipients.length;a++){const n=this._recipients[a],i={};r.recipients.push(i);const s={...this._protectedHeader,...this._unprotectedHeader,...n.unprotectedHeader}.alg.startsWith("PBES2")?2048+a:void 0;if(0===a){const e=await new ye(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(t).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(n.unprotectedHeader).setKeyManagementParameters({p2c:s}).encrypt(n.key,{...n.options,[he]:!0});r.ciphertext=e.ciphertext,r.iv=e.iv,r.tag=e.tag,e.aad&&(r.aad=e.aad),e.protected&&(r.protected=e.protected),e.unprotected&&(r.unprotected=e.unprotected),i.encrypted_key=e.encrypted_key,e.header&&(i.header=e.header);continue}const{encryptedKey:o,parameters:c}=await pe(n.unprotectedHeader?.alg||this._protectedHeader?.alg||this._unprotectedHeader?.alg,e,n.key,t,{p2c:s});i.encrypted_key=y(o),(n.unprotectedHeader||c)&&(i.header={...n.unprotectedHeader,...c})}return r}}function we(e,t){const r=`SHA-${e.slice(-3)}`;switch(e){case"HS256":case"HS384":case"HS512":return{hash:r,name:"HMAC"};case"PS256":case"PS384":case"PS512":return{hash:r,name:"RSA-PSS",saltLength:e.slice(-3)>>3};case"RS256":case"RS384":case"RS512":return{hash:r,name:"RSASSA-PKCS1-v1_5"};case"ES256":case"ES384":case"ES512":return{hash:r,name:"ECDSA",namedCurve:t.namedCurve};case"EdDSA":return{name:t.name};default:throw new g(`alg ${e} is not supported either by JOSE or your javascript runtime`)}}function ge(e,a,n){if(r(a))return W(a,e,n),a;if(a instanceof Uint8Array){if(!e.startsWith("HS"))throw new TypeError(J(a,...D));return t.subtle.importKey("raw",a,{hash:`SHA-${e.slice(-3)}`,name:"HMAC"},!1,[n])}throw new TypeError(J(a,...D,"Uint8Array"))}const fe=async(e,r,a,n)=>{const i=await ge(e,r,"verify");q(e,i);const s=we(e,i.algorithm);try{return await t.subtle.verify(s,i,a,n)}catch{return!1}};async function me(e,t,r){if(!I(e))throw new E("Flattened JWS must be an object");if(void 0===e.protected&&void 0===e.header)throw new E('Flattened JWS must have either of the "protected" or "header" members');if(void 0!==e.protected&&"string"!=typeof e.protected)throw new E("JWS Protected Header incorrect type");if(void 0===e.payload)throw new E("JWS Payload missing");if("string"!=typeof e.signature)throw new E("JWS Signature missing or incorrect type");if(void 0!==e.header&&!I(e.header))throw new E("JWS Unprotected Header incorrect type");let a={};if(e.protected)try{const t=l(e.protected);a=JSON.parse(i.decode(t))}catch{throw new E("JWS Protected Header is invalid")}if(!M(a,e.header))throw new E("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");const s={...a,...e.header};let c=!0;if(ie(E,new Map([["b64",!0]]),r?.crit,a,s).has("b64")&&(c=a.b64,"boolean"!=typeof c))throw new E('The "b64" (base64url-encode payload) Header Parameter must be a boolean');const{alg:d}=s;if("string"!=typeof d||!d)throw new E('JWS "alg" (Algorithm) Header Parameter missing or invalid');const p=r&&se("algorithms",r.algorithms);if(p&&!p.has(d))throw new w('"alg" (Algorithm) Header Parameter value not allowed');if(c){if("string"!=typeof e.payload)throw new E("JWS Payload must be a string")}else if("string"!=typeof e.payload&&!(e.payload instanceof Uint8Array))throw new E("JWS Payload must be a string or an Uint8Array instance");let h=!1;"function"==typeof t&&(t=await t(a,e),h=!0),re(d,t,"verify");const y=o(n.encode(e.protected??""),n.encode("."),"string"==typeof e.payload?n.encode(e.payload):e.payload);let u;try{u=l(e.signature)}catch{throw new E("Failed to base64url decode the signature")}if(!await fe(d,t,u,y))throw new S;let g;if(c)try{g=l(e.payload)}catch{throw new E("Failed to base64url decode the payload")}else g="string"==typeof e.payload?n.encode(e.payload):e.payload;const f={payload:g};return void 0!==e.protected&&(f.protectedHeader=a),void 0!==e.header&&(f.unprotectedHeader=e.header),h?{...f,key:t}:f}class Ee{constructor(e){this._flattened=new ye(e)}setContentEncryptionKey(e){return this._flattened.setContentEncryptionKey(e),this}setInitializationVector(e){return this._flattened.setInitializationVector(e),this}setProtectedHeader(e){return this._flattened.setProtectedHeader(e),this}setKeyManagementParameters(e){return this._flattened.setKeyManagementParameters(e),this}async encrypt(e,t){const r=await this._flattened.encrypt(e,t);return[r.protected,r.encrypted_key,r.iv,r.ciphertext,r.tag].join(".")}}class Se{constructor(e){if(!(e instanceof Uint8Array))throw new TypeError("payload must be an instance of Uint8Array");this._payload=e}setProtectedHeader(e){if(this._protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this._protectedHeader=e,this}setUnprotectedHeader(e){if(this._unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this._unprotectedHeader=e,this}async sign(e,r){if(!this._protectedHeader&&!this._unprotectedHeader)throw new E("either setProtectedHeader or setUnprotectedHeader must be called before #sign()");if(!M(this._protectedHeader,this._unprotectedHeader))throw new E("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");const a={...this._protectedHeader,...this._unprotectedHeader};let s=!0;if(ie(E,new Map([["b64",!0]]),r?.crit,this._protectedHeader,a).has("b64")&&(s=this._protectedHeader.b64,"boolean"!=typeof s))throw new E('The "b64" (base64url-encode payload) Header Parameter must be a boolean');const{alg:c}=a;if("string"!=typeof c||!c)throw new E('JWS "alg" (Algorithm) Header Parameter missing or invalid');re(c,e,"sign");let d,p=this._payload;s&&(p=n.encode(y(p))),d=this._protectedHeader?n.encode(y(JSON.stringify(this._protectedHeader))):n.encode("");const h=o(d,n.encode("."),p),l=await(async(e,r,a)=>{const n=await ge(e,r,"sign");q(e,n);const i=await t.subtle.sign(we(e,n.algorithm),n,a);return new Uint8Array(i)})(c,e,h),u={signature:y(l),payload:""};return s&&(u.payload=i.decode(p)),this._unprotectedHeader&&(u.header=this._unprotectedHeader),this._protectedHeader&&(u.protected=i.decode(d)),u}}class Ae{constructor(e){this._flattened=new Se(e)}setProtectedHeader(e){return this._flattened.setProtectedHeader(e),this}async sign(e,t){const r=await this._flattened.sign(e,t);if(void 0===r.payload)throw new TypeError("use the flattened module for creating JWS with b64: false");return`${r.protected}.${r.payload}.${r.signature}`}}class ve{constructor(e,t,r){this.parent=e,this.key=t,this.options=r}setProtectedHeader(e){if(this.protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this.protectedHeader=e,this}setUnprotectedHeader(e){if(this.unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this.unprotectedHeader=e,this}addSignature(...e){return this.parent.addSignature(...e)}sign(...e){return this.parent.sign(...e)}done(){return this.parent}}class He{constructor(e){this._signatures=[],this._payload=e}addSignature(e,t){const r=new ve(this,e,t);return this._signatures.push(r),r}async sign(){if(!this._signatures.length)throw new E("at least one signature must be added");const e={signatures:[],payload:""};for(let t=0;t<this._signatures.length;t++){const r=this._signatures[t],a=new Se(this._payload);a.setProtectedHeader(r.protectedHeader),a.setUnprotectedHeader(r.unprotectedHeader);const{payload:n,...i}=await a.sign(r.key,r.options);if(0===t)e.payload=n;else if(e.payload!==n)throw new E("inconsistent use of JWS Unencoded Payload (RFC7797)");e.signatures.push(i)}return e}}const be=y,Ke=l;function Pe(e){let t;if("string"==typeof e){const r=e.split(".");3!==r.length&&5!==r.length||([t]=r)}else if("object"==typeof e&&e){if(!("protected"in e))throw new TypeError("Token does not contain a Protected Header");t=e.protected}try{if("string"!=typeof t||!t)throw new Error;const e=JSON.parse(i.decode(Ke(t)));if(!I(e))throw new Error;return e}catch{throw new TypeError("Invalid Token or Protected Header formatting")}}function Ce(e){const t=e?.modulusLength??2048;if("number"!=typeof t||t<2048)throw new g("Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used");return t}async function _e(e,r){return async function(e,r){let a,n;switch(e){case"PS256":case"PS384":case"PS512":a={name:"RSA-PSS",hash:`SHA-${e.slice(-3)}`,publicExponent:new Uint8Array([1,0,1]),modulusLength:Ce(r)},n=["sign","verify"];break;case"RS256":case"RS384":case"RS512":a={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${e.slice(-3)}`,publicExponent:new Uint8Array([1,0,1]),modulusLength:Ce(r)},n=["sign","verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":a={name:"RSA-OAEP",hash:`SHA-${parseInt(e.slice(-3),10)||1}`,publicExponent:new Uint8Array([1,0,1]),modulusLength:Ce(r)},n=["decrypt","unwrapKey","encrypt","wrapKey"];break;case"ES256":a={name:"ECDSA",namedCurve:"P-256"},n=["sign","verify"];break;case"ES384":a={name:"ECDSA",namedCurve:"P-384"},n=["sign","verify"];break;case"ES512":a={name:"ECDSA",namedCurve:"P-521"},n=["sign","verify"];break;case"EdDSA":{n=["sign","verify"];const e=r?.crv??"Ed25519";switch(e){case"Ed25519":case"Ed448":a={name:e};break;default:throw new g("Invalid or unsupported crv option provided")}break}case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":{n=["deriveKey","deriveBits"];const e=r?.crv??"P-256";switch(e){case"P-256":case"P-384":case"P-521":a={name:"ECDH",namedCurve:e};break;case"X25519":case"X448":a={name:e};break;default:throw new g("Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448")}break}default:throw new g('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}return t.subtle.generateKey(a,r?.extractable??!1,n)}(e,r)}async function We(e,r){return async function(e,r){let a,n,i;switch(e){case"HS256":case"HS384":case"HS512":a=parseInt(e.slice(-3),10),n={name:"HMAC",hash:`SHA-${a}`,length:a},i=["sign","verify"];break;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return a=parseInt(e.slice(-3),10),A(new Uint8Array(a>>3));case"A128KW":case"A192KW":case"A256KW":a=parseInt(e.slice(1,4),10),n={name:"AES-KW",length:a},i=["wrapKey","unwrapKey"];break;case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":case"A128GCM":case"A192GCM":case"A256GCM":a=parseInt(e.slice(1,4),10),n={name:"AES-GCM",length:a},i=["encrypt","decrypt"];break;default:throw new g('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}return t.subtle.generateKey(n,r?.extractable??!1,i)}(e,r)}const ke="ECDSA",Ue="P-384",Je="ES384",Re="SHA-256",Te="RSA-OAEP-256",De="AES-GCM",Oe="A256GCM",xe="PBES2-HS512+A256KW",Me=!0;async function Ie(t){let r=await e.subtle.digest(Re,t);return new Uint8Array(r)}function $e(e){return Ie((new TextEncoder).encode(e))}function je(e){return be(e)}function Be(e){return Ke(e)}const Ge={decodeProtectedHeader:Pe,isEmptyJWSPayload:e=>!e.split(".")[1],inputBuffer(e,t){if(ArrayBuffer.isView(e))return e;let r=t.cty||"";return r.includes("text")||"string"==typeof e?t.cty=r||"text/plain":(t.cty=r||"json",e=JSON.stringify(e)),(new TextEncoder).encode(e)},recoverDataFromContentType:(e,{cty:t=e?.protectedHeader?.cty}={})=>(e&&!Object.prototype.hasOwnProperty.call(e,"payload")&&(e.payload=e.plaintext),t&&e?.payload?(e.text=(new TextDecoder).decode(e.payload),t.includes("json")&&(e.json=JSON.parse(e.text)),e):e),generateSigningKey:()=>_e(Je,{extractable:Me}),async sign(e,t,r={}){let a={alg:Je,...r},n=this.inputBuffer(t,a);return new Ae(n).setProtectedHeader(a).sign(e)},async verify(e,t,r){let a=await async function(e,t,r){if(e instanceof Uint8Array&&(e=i.decode(e)),"string"!=typeof e)throw new E("Compact JWS must be a string or Uint8Array");const{0:a,1:n,2:s,length:o}=e.split(".");if(3!==o)throw new E("Invalid Compact JWS");const c=await me({payload:n,protected:a,signature:s},t,r),d={payload:c.payload,protectedHeader:c.protectedHeader};return"function"==typeof t?{...d,key:c.key}:d}(t,e).catch((()=>{}));return this.recoverDataFromContentType(a,r)},generateEncryptingKey:()=>_e(Te,{extractable:Me,modulusLength:4096}),async encrypt(e,t,r={}){let a={alg:this.isSymmetric(e)?"dir":Te,enc:Oe,...r},n=this.inputBuffer(t,a),i=this.keySecret(e);return new Ee(n).setProtectedHeader(a).encrypt(i)},async decrypt(e,t,r={}){let a=this.keySecret(e),n=await async function(e,t,r){if(e instanceof Uint8Array&&(e=i.decode(e)),"string"!=typeof e)throw new m("Compact JWE must be a string or Uint8Array");const{0:a,1:n,2:s,3:o,4:c,length:d}=e.split(".");if(5!==d)throw new m("Invalid Compact JWE");const p=await oe({ciphertext:o,iv:s||void 0,protected:a,tag:c||void 0,encrypted_key:n||void 0},t,r),h={plaintext:p.plaintext,protectedHeader:p.protectedHeader};return"function"==typeof t?{...h,key:p.key}:h}(t,a);return this.recoverDataFromContentType(n,r),n},generateSecretKey:async e=>({type:"secret",text:await $e(e)}),generateSymmetricKey(e){return e?this.generateSecretKey(e):We(Oe,{extractable:Me})},isSymmetric:e=>"secret"===e.type,keySecret:e=>e.text?e.text:e,async exportRaw(t){let r=await function(t){return e.subtle.exportKey("raw",t)}(t);return je(new Uint8Array(r))},importRaw:async t=>function(t){const r={name:ke,namedCurve:Ue};return e.subtle.importKey("raw",t,r,Me,["verify"])}(Be(t)),async exportJWK(e){let t=await de(e),r=e.algorithm;if(r)r.name===ke&&r.namedCurve===Ue?t.alg=Je:"RSA-OAEP"===r.name&&r.hash.name===Re?t.alg=Te:r.name===De&&256===r.length&&(t.alg=Oe);else switch(t.kty){case"EC":t.alg=Je;break;case"RSA":t.alg=Te;break;case"oct":t.alg=Oe}return t},async importJWK(t){t={ext:!0,...t};let r=await te(t);return r instanceof Uint8Array&&(r=await function(t){const r={name:De,length:256};return e.subtle.importKey("raw",t,r,!0,["encrypt","decrypt"])}(r)),r},async wrapKey(e,t,r={}){let a=await this.exportJWK(e);return this.encrypt(t,a,r)},async unwrapKey(e,t){let r=await this.decrypt(t,e);return this.importJWK(r.json)}};const Fe={isMultiKey:e=>"multi"===(e.type||"multi"),keyTags:e=>Object.keys(e).filter((e=>"type"!==e)),async exportJWK(e){if(!this.isMultiKey(e))return super.exportJWK(e);let t=this.keyTags(e),r=await Promise.all(t.map((async t=>{let r=await this.exportJWK(e[t]);return r.kid=t,r})));return{keys:r}},async importJWK(e){if(!e.keys)return super.importJWK(e);let t={};return await Promise.all(e.keys.map((async e=>t[e.kid]=await this.importJWK(e)))),t},async encrypt(e,t,r={}){if(!this.isMultiKey(e))return super.encrypt(e,t,r);let a={enc:Oe,...r},n=this.inputBuffer(t,a),i=new ue(n).setProtectedHeader(a);for(let t of this.keyTags(e)){let r=e[t],a="string"==typeof r,n=a||this.isSymmetric(r),s=a?(new TextEncoder).encode(r):this.keySecret(r),o=a?xe:n?"A256GCMKW":Te;i.addRecipient(s).setUnprotectedHeader({kid:t,alg:o})}return await i.encrypt()},async decrypt(e,t,r){if(!this.isMultiKey(e))return super.decrypt(e,t,r);let a=t,{recipients:n}=a,i=n.map((async({header:t})=>{let{kid:r}=t,n=e[r],i={};if(!n)return Promise.reject("missing");"string"==typeof n&&(n=(new TextEncoder).encode(n),i.keyManagementAlgorithms=[xe]);let s=await async function(e,t,r){if(!I(e))throw new m("General JWE must be an object");if(!Array.isArray(e.recipients)||!e.recipients.every(I))throw new m("JWE Recipients missing or incorrect type");if(!e.recipients.length)throw new m("JWE Recipients has no members");for(const a of e.recipients)try{return await oe({aad:e.aad,ciphertext:e.ciphertext,encrypted_key:a.encrypted_key,header:a.header,iv:e.iv,protected:e.protected,tag:e.tag,unprotected:e.unprotected},t,r)}catch{}throw new f}(a,this.keySecret(n),i),o=s.unprotectedHeader.kid;return o!==r?function(e,t){let r=`Key ${e} does not match encoded ${t}.`;return Promise.reject(r)}(r,o):s}));return await Promise.any(i).then((e=>(this.recoverDataFromContentType(e,r),e)),(()=>{}))},async sign(e,t,r={}){if(!this.isMultiKey(e))return super.sign(e,t,r);let a=this.inputBuffer(t,r),n=new He(a);for(let t of this.keyTags(e)){let a=e[t],i={kid:t,alg:Je,...r};n.addSignature(a).setProtectedHeader(i)}return n.sign()},verifySubSignature(e,t,r,a){let n=t.protectedHeader??this.decodeProtectedHeader(t),i=t.unprotectedHeader,s=n?.kid||i?.kid,o={...e,signatures:[t]},c={protectedHeader:n,unprotectedHeader:i,kid:s},d=s?[s]:a,p=Promise.any(d.map((async e=>async function(e,t,r){if(!I(e))throw new E("General JWS must be an object");if(!Array.isArray(e.signatures)||!e.signatures.every(I))throw new E("JWS Signatures missing or incorrect type");for(const a of e.signatures)try{return await me({header:a.header,payload:e.payload,protected:a.protected,signature:a.signature},t,r)}catch{}throw new S}(o,r[e]).then((t=>({kid:e,...t}))))));return p.catch((()=>c))},async verify(e,t,r={}){if(!this.isMultiKey(e))return super.verify(e,t,r);if(!t.signatures)return;let a=t,n=this.keyTags(e),i=await Promise.all(a.signatures.map((t=>this.verifySubSignature(a,t,e,n))));if(!i.find((e=>e.payload)))return;let[s,...o]=i,c={protectedHeader:{},unprotectedHeader:{},signers:i},d=e=>{let t=s[e],r=c[e];for(let a in t){let n=t[a];o.some((t=>t[e][a]!==n))||(r[a]=n)}};return d("protectedHeader"),d("protectedHeader"),c.payload=i.find((e=>e.payload)).payload,this.recoverDataFromContentType(c,r)}};Object.setPrototypeOf(Fe,Ge);var Ne=e=>e;function Le(e,t){return t?e+Ne(t):e}"undefined"!=typeof window&&(Ne=window.prompt);const ze=new URL(import.meta.url).origin,Ve=/(\S{50})(\S{2})(\S{2})(\S+)/;async function Xe(e){if(404===e.status)return"";if(!e.ok)return Promise.reject(e.statusText);let t=await e.text();return t?JSON.parse(t):t}const qe={get origin(){return ze},tagPath:function(e,t,r="json"){if(!t)return e;let a=t.match(Ve);if(!a)return`${e}/${t}`;let[n,i,s,o,c]=a;return`${e}/${s}/${o}/${i}/${c}.${r}`},mkdir:undefined,uri(e,t){return`${ze}/db/${this.tagPath(e,t)}`},store(e,t,r,a={}){return fetch(this.uri(e,t),{method:"PUT",body:JSON.stringify(r),headers:{"Content-Type":"application/json",...a.headers||{}}}).then(Xe)},retrieve(e,t,r={}){return fetch(this.uri(e,t),{cache:"default",headers:{Accept:"application/json",...r.headers||{}}}).then(Xe)}};function Ye(e,t,r=void 0){let a=e(t.slice(0,16)+"...");return Promise.reject(new Error(a,{cause:r}))}function Qe(e){return Ye((e=>`The tag ${e} is not available.`),e)}class Ze{static keySets={};static cached(e){return Ze.keySets[e]}static clear(e=null){if(!e)return Ze.keySets={};delete Ze.keySets[e]}constructor(e){this.tag=e,this.memberTags=[],Ze.keySets[e]=this}static getUserDeviceSecret=Le;static Storage=qe;static async create(e){let{time:t,...r}=await this.createKeys(e),{tag:a}=r;return await this.persist(a,r,e,t),a}async destroy(e={}){let{tag:t,memberTags:r,signingKey:a}=this,n=await this.constructor.signForStorage({...e,message:"",tag:t,memberTags:r,signingKey:a,time:Date.now(),recovery:!0});await this.constructor.store("EncryptionKey",t,n),await this.constructor.store(this.constructor.collection,t,n),this.constructor.clear(t),e.recursiveMembers&&await Promise.allSettled(this.memberTags.map((async t=>{let r=await Ze.ensure(t,{...e,recovery:!0});await r.destroy(e)})))}decrypt(e,t){let{tag:r,decryptingKey:a}=this,n=e.recipients?{[r]:a}:a;return Fe.decrypt(n,e,t)}static async sign(e,{tags:t=[],team:r,member:a,subject:n="hash",time:i=r&&Date.now(),memberTags:s,signingKey:o,...c}){if(r&&!a){s||(s=(await Ze.ensure(r)).memberTags),a=s.find((e=>this.cached(e)))||await this.ensure1(s).then((e=>e.tag))}r&&!t.includes(r)&&(t=[r,...t]),a&&!t.includes(a)&&(t=[...t,a]);let d=await this.produceKey(t,(async e=>{let t=o||(await Ze.ensure(e,c)).signingKey;return o=null,t}),c),p=Fe.inputBuffer(e,c);if("hash"===n){const e=await Ie(p);n=await je(e)}else n||(n=void 0);return Fe.sign(d,p,{iss:r,act:a,iat:i,sub:n,...c})}static async verify(e,t,r){let a=!e.signatures,n=await this.produceKey(t,(e=>Ze.verifyingKey(e)),r,a),i=await Fe.verify(n,e,r),s=void 0===r.member?i?.protectedHeader.act:r.member,o=r.notBefore;function c(e){if(r.hardError)return Promise.reject(new Error(e))}if(!i)return c("Incorrect signature.");if(s){if("team"===r.member&&(s=i.protecteHeader.act,!s))return c("No member identified in signature.");if(!t.includes(s)){let a=await Ze.verifyingKey(s),n={[s]:a};if(!await Fe.verify(n,e,r))return c("Incorrect member signature.");t.push(s),i.signers.find((e=>e.protectedHeader.kid===s)).payload=i.payload}}if(s||"team"===o){let e=i.protectedHeader.iss||i.protectedHeader.kid,t=await this.retrieve(nt.collection,e),r=t?.json;if(s&&!e)return c("No team or main tag identified in signature");if(s&&r&&!r.recipients.find((e=>e.header.kid===s)))return c("Signer is not a member.");"team"===o&&(o=t?.protectedHeader.iat||(await this.retrieve("EncryptionKey",e))?.protectedHeader.iat)}if(o){let{iat:e}=i.protectedHeader;if(e<o)return c("Signature predates required timestamp.")}return(i.signers?.filter((e=>e.payload)).length||1)!==t.length?c("Unverified signer"):i}static async produceKey(e,t,r,a=1===e.length){if(a){let a=e[0];return r.kid=a,t(a)}let n={},i=await Promise.all(e.map((e=>t(e))));return e.forEach(((e,t)=>n[e]=i[t])),n}static verifyingKey(e){return Fe.importRaw(e).catch((()=>Qe(e)))}static async encryptingKey(e){let t=await this.retrieve("EncryptionKey",e);return t?await Fe.importJWK(t.json):Qe(e)}static async createKeys(e){let{publicKey:t,privateKey:r}=await Fe.generateSigningKey(),{publicKey:a,privateKey:n}=await Fe.generateEncryptingKey(),i=await Fe.exportRaw(t),s=await Fe.exportJWK(a),o=Date.now(),c=await this.signForStorage({message:s,tag:i,signingKey:r,memberTags:e,time:o,recovery:!0});return await this.store("EncryptionKey",i,c),{signingKey:r,decryptingKey:n,tag:i,time:o}}static getWrapped(e){return this.retrieve(this.collection,e)}static async ensure(e,{device:t=!0,team:r=!0,recovery:a=!1}={}){let n=this.cached(e),i=t&&await rt.getWrapped(e);return i?n||=new rt(e):r&&(i=await nt.getWrapped(e))?n||=new nt(e):a&&(i=await tt.getWrapped(e))&&(n||=new tt(e)),n?.cached&&n.cached.protectedHeader.iat===i.protectedHeader.iat&&n.cached.text===i.text&&n.decryptingKey&&n.signingKey?n:i?(n.cached=i,n.unwrap(n.cached).then((e=>Object.assign(n,e)),(e=>(this.clear(n.tag),Ye((e=>`You do not have access to the private key for ${e}.`),n.tag,e))))):(this.clear(e),Qe(e))}static ensure1(e){return Promise.any(e.map((e=>Ze.ensure(e)))).catch((async t=>{for(let t of e){let e=await Ze.ensure(t,{device:!1,team:!1,recovery:!0}).catch((()=>null));if(e)return e}throw t}))}static async persist(e,t,r,a=Date.now(),n=r){let{signingKey:i}=t,s=await this.wrap(t,r),o=await this.signForStorage({message:s,tag:e,signingKey:i,memberTags:n,time:a,recovery:!0});await this.store(this.collection,e,o)}static async store(e,t,r){return e===rt.collection?Fe.isEmptyJWSPayload(r)?at.remove(t):at.store(t,r):Ze.Storage.store(e,t,r)}static async retrieve(e,t){let r=e===rt.collection?at.retrieve(t):Ze.Storage.retrieve(e,t),a=await r,n=a&&await Ze.verifyingKey(t);if(a)return a.signatures&&(n={[t]:n}),await Fe.verify(n,a)}}class et extends Ze{static signForStorage({message:e,tag:t,signingKey:r,time:a}){return this.sign(e,{tags:[t],signingKey:r,time:a})}static async wrappingKey(e,t){let r=await this.getSecret(e,t);return Fe.generateSecretKey(r)}static async wrap(e,t=""){let{decryptingKey:r,signingKey:a,tag:n}=e,i={decryptingKey:r,signingKey:a},s=await this.wrappingKey(n,t);return Fe.wrapKey(i,s,{prompt:t})}async unwrap(e){let t=e.json||e.text,r=Fe.decodeProtectedHeader(t).prompt,a=await this.constructor.wrappingKey(this.tag,r),n=(await Fe.decrypt(a,t)).json;return await Fe.importJWK(n,{decryptingKey:"decrypt",signingKey:"sign"})}static async getSecret(e,t){return Ze.getUserDeviceSecret(e,t)}}class tt extends et{static collection="KeyRecovery"}class rt extends et{static collection="Device"}const at=new class{constructor({collectionName:e="collection",dbName:t="asyncLocalStorage"}={}){this.collectionName=e,this.dbName=t,this.version=1}get db(){return this._db??=new Promise((e=>{const t=indexedDB.open(this.dbName,this.version);t.onupgradeneeded=e=>e.target.result.createObjectStore(this.collectionName),this.result(e,t)}))}transaction(e="read"){const t=this.collectionName;return this.db.then((r=>r.transaction(t,e).objectStore(t)))}result(e,t){t.onsuccess=t=>e(t.target.result||"")}retrieve(e){return new Promise((t=>{this.transaction("readonly").then((r=>this.result(t,r.get(e))))}))}store(e,t){return new Promise((r=>{this.transaction("readwrite").then((a=>this.result(r,a.put(t,e))))}))}remove(e){return new Promise((t=>{this.transaction("readwrite").then((r=>this.result(t,r.delete(e))))}))}}({collectionName:rt.collection});class nt extends Ze{static collection="Team";static signForStorage({message:e,tag:t,...r}){return this.sign(e,{team:t,...r})}static async wrap(e,t){let{decryptingKey:r,signingKey:a}=e,n={decryptingKey:r,signingKey:a},i={};return await Promise.all(t.map((e=>Ze.encryptingKey(e).then((t=>i[e]=t))))),await Fe.wrapKey(n,i)}async unwrap(e){let{recipients:t}=e.json,r=this.memberTags=t.map((e=>e.header.kid)),a=await this.constructor.ensure1(r),n=await a.decrypt(e.json);return await Fe.importJWK(n.json)}async changeMembership({add:e=[],remove:t=[]}={}){let{memberTags:r}=this,a=r.concat(e).filter((e=>!t.includes(e)));await this.constructor.persist(this.tag,this,a,Date.now(),r),this.memberTags=a}}const it={get KeySet(){return Ze},set Storage(e){Ze.Storage=e},get Storage(){return Ze.Storage},set getUserDeviceSecret(e){Ze.getUserDeviceSecret=e},get getUserDeviceSecret(){return Ze.getUserDeviceSecret},ready:{name:"@ki1r0y/distributed-security",version:"1.1.0",origin:Ze.Storage.origin},async encrypt(e,...t){let r={},a=this.canonicalizeParameters(t,r),n=await Ze.produceKey(a,(e=>Ze.encryptingKey(e)),r);return Fe.encrypt(n,e,r)},async decrypt(e,...t){let r={},[a]=this.canonicalizeParameters(t,r,e),{recovery:n,...i}=r;return(await Ze.ensure(a,{recovery:n})).decrypt(e,i)},async sign(e,...t){let r={},a=this.canonicalizeParameters(t,r);return Ze.sign(e,{tags:a,...r})},async verify(e,...t){let r={},a=this.canonicalizeParameters(t,r,e);return Ze.verify(e,a,r)},async create(...e){if(!e.length)return await rt.create();let t=e[0].prompt;return t?await tt.create(t):await nt.create(e)},changeMembership:async({tag:e,recovery:t=!1,...r})=>(await Ze.ensure(e,{recovery:t,...r})).changeMembership(r),async destroy(e){"string"==typeof e&&(e={tag:e});let{tag:t,recovery:r=!0,...a}=e,n={recovery:r,...a};return(await Ze.ensure(t,n)).destroy(n)},clear(e){Ze.clear(e)},hashBuffer:Ie,hashText:$e,encodeBase64url:je,decodeBase64url:Be,decodeClaims:function(e,t=0){return Pe(e.signatures?.[t]||e)},canonicalizeParameters(e,t,r){if(e.length>1||void 0!==e[0]?.length)return e;let{tags:a=[],contentType:n,time:i,...s}=e[0]||{},{team:o}=s;if(!a.length)if(e.length&&e[0].length)a=e;else if(r)if(r.signatures)a=r.signatures.map((e=>Fe.decodeProtectedHeader(e).kid));else if(r.recipients)a=r.recipients.map((e=>e.header.kid));else{let e=Fe.decodeProtectedHeader(r).kid;e&&(a=[e])}return o&&!a.includes(o)&&(a=[o,...a]),n&&(t.cty=n),i&&(t.iat=i),Object.assign(t,s),a}};const st=function({target:e=self,receiver:t=e,namespace:r=t,origin:a=e!==t&&e.location.origin,dispatcherLabel:n=r.name||t.name||t.location?.href||t,targetLabel:i=e.name||a||e.location?.href||e,log:s=null,info:o=console.info.bind(console),warn:c=console.warn.bind(console),error:d=console.error.bind(console)}){const p={},h="2.0",y=e.postMessage.bind(e),l=a?e=>y(e,a):y;let u=0;return t.addEventListener("message",(async function(t){s?.(n,"got message",t.data,"from",i,t.origin);let{id:o,method:y,params:u=[],result:w,error:g,jsonrpc:f}=t.data||{};if(t.source&&t.source!==e)return d?.(n,"to",i,"got message from",t.source);if(a&&a!==t.origin)return d?.(n,a,"mismatched origin",i,t.origin);if(f!==h)return c?.(`${n} ignoring non-jsonrpc message ${JSON.stringify(t.data)}.`);if(y){let e,t=null,a=Array.isArray(u)?u:[u];try{e=await r[y](...a)}catch(e){t=function(e){let{name:t,message:r,code:a,data:n}=e;return{name:t,message:r,code:a,data:n}}(e),r[y]||t.message.includes(y)?t.message||(t.message=`${t.name||t.toString()} in ${y}.`):(t.message=`${y} is not defined.`,t.code=-32601)}if(void 0===o)return;let c=t?{id:o,error:t,jsonrpc:h}:{id:o,result:e,jsonrpc:h};return s?.(n,"answering",o,t||e,"to",i),l(c)}let m=p[o];if(delete p[o],!m)return c?.(`${n} ignoring response ${t.data}.`);g?m.reject(g):m.resolve(w)})),o?.(`${n} will dispatch to ${i}`),function(e,...t){let r=++u,a=p[r]={};return new Promise(((o,c)=>{s?.(n,"request",r,e,t,"to",i),Object.assign(a,{resolve:o,reject:c}),l({id:r,method:e,params:t,jsonrpc:h})}))}}({targetLabel:"vault:"+self.name.split("!")[1],namespace:it});it.Storage={store:(...e)=>st("store",...e),retrieve:(...e)=>st("retrieve",...e)},it.getUserDeviceSecret=(e,t="")=>st("getUserDeviceSecret",e,t),st("ready",it.ready);
