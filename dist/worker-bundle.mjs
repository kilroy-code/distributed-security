var e=crypto;const t=e=>e instanceof CryptoKey,r=async(t,r)=>{const n=`SHA-${t.slice(-3)}`;return new Uint8Array(await e.subtle.digest(n,r))},n=new TextEncoder,a=new TextDecoder,i=2**32;function s(...e){const t=e.reduce(((e,{length:t})=>e+t),0),r=new Uint8Array(t);let n=0;for(const t of e)r.set(t,n),n+=t.length;return r}function o(e,t,r){if(t<0||t>=i)throw new RangeError(`value must be >= 0 and <= ${i-1}. Received ${t}`);e.set([t>>>24,t>>>16,t>>>8,255&t],r)}function c(e){const t=Math.floor(e/i),r=e%i,n=new Uint8Array(8);return o(n,t,0),o(n,r,4),n}function d(e){const t=new Uint8Array(4);return o(t,e),t}function p(e){return s(d(e.length),e)}const l=e=>(e=>{let t=e;"string"==typeof t&&(t=n.encode(t));const r=[];for(let e=0;e<t.length;e+=32768)r.push(String.fromCharCode.apply(null,t.subarray(e,e+32768)));return btoa(r.join(""))})(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"),h=e=>{let t=e;t instanceof Uint8Array&&(t=a.decode(t)),t=t.replace(/-/g,"+").replace(/_/g,"/").replace(/\s/g,"");try{return(e=>{const t=atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;e++)r[e]=t.charCodeAt(e);return r})(t)}catch{throw new TypeError("The input to be decoded is not correctly encoded.")}};class u extends Error{static get code(){return"ERR_JOSE_GENERIC"}constructor(e){super(e),this.code="ERR_JOSE_GENERIC",this.name=this.constructor.name,Error.captureStackTrace?.(this,this.constructor)}}class y extends u{constructor(){super(...arguments),this.code="ERR_JOSE_ALG_NOT_ALLOWED"}static get code(){return"ERR_JOSE_ALG_NOT_ALLOWED"}}class w extends u{constructor(){super(...arguments),this.code="ERR_JOSE_NOT_SUPPORTED"}static get code(){return"ERR_JOSE_NOT_SUPPORTED"}}class g extends u{constructor(){super(...arguments),this.code="ERR_JWE_DECRYPTION_FAILED",this.message="decryption operation failed"}static get code(){return"ERR_JWE_DECRYPTION_FAILED"}}class f extends u{constructor(){super(...arguments),this.code="ERR_JWE_INVALID"}static get code(){return"ERR_JWE_INVALID"}}class m extends u{constructor(){super(...arguments),this.code="ERR_JWS_INVALID"}static get code(){return"ERR_JWS_INVALID"}}class E extends u{constructor(){super(...arguments),this.code="ERR_JWS_SIGNATURE_VERIFICATION_FAILED",this.message="signature verification failed"}static get code(){return"ERR_JWS_SIGNATURE_VERIFICATION_FAILED"}}var S=e.getRandomValues.bind(e);function A(e){switch(e){case"A128GCM":case"A128GCMKW":case"A192GCM":case"A192GCMKW":case"A256GCM":case"A256GCMKW":return 96;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return 128;default:throw new w(`Unsupported JWE Algorithm: ${e}`)}}const b=(e,t)=>{if(t.length<<3!==A(e))throw new f("Invalid Initialization Vector length")},H=(e,t)=>{const r=e.byteLength<<3;if(r!==t)throw new f(`Invalid Content Encryption Key length. Expected ${t} bits, got ${r} bits`)};function v(e,t="algorithm.name"){return new TypeError(`CryptoKey does not support this operation, its ${t} must be ${e}`)}function K(e,t){return e.name===t}function P(e){return parseInt(e.name.slice(4),10)}function C(e,t){if(t.length&&!t.some((t=>e.usages.includes(t)))){let e="CryptoKey does not support this operation, its usages must include ";if(t.length>2){const r=t.pop();e+=`one of ${t.join(", ")}, or ${r}.`}else 2===t.length?e+=`one of ${t[0]} or ${t[1]}.`:e+=`${t[0]}.`;throw new TypeError(e)}}function _(e,t,...r){switch(t){case"HS256":case"HS384":case"HS512":{if(!K(e.algorithm,"HMAC"))throw v("HMAC");const r=parseInt(t.slice(2),10);if(P(e.algorithm.hash)!==r)throw v(`SHA-${r}`,"algorithm.hash");break}case"RS256":case"RS384":case"RS512":{if(!K(e.algorithm,"RSASSA-PKCS1-v1_5"))throw v("RSASSA-PKCS1-v1_5");const r=parseInt(t.slice(2),10);if(P(e.algorithm.hash)!==r)throw v(`SHA-${r}`,"algorithm.hash");break}case"PS256":case"PS384":case"PS512":{if(!K(e.algorithm,"RSA-PSS"))throw v("RSA-PSS");const r=parseInt(t.slice(2),10);if(P(e.algorithm.hash)!==r)throw v(`SHA-${r}`,"algorithm.hash");break}case"EdDSA":if("Ed25519"!==e.algorithm.name&&"Ed448"!==e.algorithm.name)throw v("Ed25519 or Ed448");break;case"ES256":case"ES384":case"ES512":{if(!K(e.algorithm,"ECDSA"))throw v("ECDSA");const r=function(e){switch(e){case"ES256":return"P-256";case"ES384":return"P-384";case"ES512":return"P-521";default:throw new Error("unreachable")}}(t);if(e.algorithm.namedCurve!==r)throw v(r,"algorithm.namedCurve");break}default:throw new TypeError("CryptoKey does not support this operation")}C(e,r)}function k(e,t,...r){switch(t){case"A128GCM":case"A192GCM":case"A256GCM":{if(!K(e.algorithm,"AES-GCM"))throw v("AES-GCM");const r=parseInt(t.slice(1,4),10);if(e.algorithm.length!==r)throw v(r,"algorithm.length");break}case"A128KW":case"A192KW":case"A256KW":{if(!K(e.algorithm,"AES-KW"))throw v("AES-KW");const r=parseInt(t.slice(1,4),10);if(e.algorithm.length!==r)throw v(r,"algorithm.length");break}case"ECDH":switch(e.algorithm.name){case"ECDH":case"X25519":case"X448":break;default:throw v("ECDH, X25519, or X448")}break;case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":if(!K(e.algorithm,"PBKDF2"))throw v("PBKDF2");break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":{if(!K(e.algorithm,"RSA-OAEP"))throw v("RSA-OAEP");const r=parseInt(t.slice(9),10)||1;if(P(e.algorithm.hash)!==r)throw v(`SHA-${r}`,"algorithm.hash");break}default:throw new TypeError("CryptoKey does not support this operation")}C(e,r)}function W(e,t,...r){if(r.length>2){const t=r.pop();e+=`one of type ${r.join(", ")}, or ${t}.`}else 2===r.length?e+=`one of type ${r[0]} or ${r[1]}.`:e+=`of type ${r[0]}.`;return null==t?e+=` Received ${t}`:"function"==typeof t&&t.name?e+=` Received function ${t.name}`:"object"==typeof t&&null!=t&&t.constructor?.name&&(e+=` Received an instance of ${t.constructor.name}`),e}var U=(e,...t)=>W("Key must be ",e,...t);function J(e,t,...r){return W(`Key for the ${e} algorithm must be `,t,...r)}var R=e=>t(e);const T=["CryptoKey"];async function D(t,r,n,a,i,o){if(!(r instanceof Uint8Array))throw new TypeError(U(r,"Uint8Array"));const d=parseInt(t.slice(1,4),10),p=await e.subtle.importKey("raw",r.subarray(d>>3),"AES-CBC",!1,["decrypt"]),l=await e.subtle.importKey("raw",r.subarray(0,d>>3),{hash:"SHA-"+(d<<1),name:"HMAC"},!1,["sign"]),h=s(o,a,n,c(o.length<<3)),u=new Uint8Array((await e.subtle.sign("HMAC",l,h)).slice(0,d>>3));let y,w;try{y=((e,t)=>{if(!(e instanceof Uint8Array))throw new TypeError("First argument must be a buffer");if(!(t instanceof Uint8Array))throw new TypeError("Second argument must be a buffer");if(e.length!==t.length)throw new TypeError("Input buffers must have the same length");const r=e.length;let n=0,a=-1;for(;++a<r;)n|=e[a]^t[a];return 0===n})(i,u)}catch{}if(!y)throw new g;try{w=new Uint8Array(await e.subtle.decrypt({iv:a,name:"AES-CBC"},p,n))}catch{}if(!w)throw new g;return w}const O=async(r,n,a,i,o,c)=>{if(!(t(n)||n instanceof Uint8Array))throw new TypeError(U(n,...T,"Uint8Array"));if(!i)throw new f("JWE Initialization Vector missing");if(!o)throw new f("JWE Authentication Tag missing");switch(b(r,i),r){case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return n instanceof Uint8Array&&H(n,parseInt(r.slice(-3),10)),D(r,n,a,i,o,c);case"A128GCM":case"A192GCM":case"A256GCM":return n instanceof Uint8Array&&H(n,parseInt(r.slice(1,4),10)),async function(t,r,n,a,i,o){let c;r instanceof Uint8Array?c=await e.subtle.importKey("raw",r,"AES-GCM",!1,["decrypt"]):(k(r,t,"decrypt"),c=r);try{return new Uint8Array(await e.subtle.decrypt({additionalData:o,iv:a,name:"AES-GCM",tagLength:128},c,s(n,i)))}catch{throw new g}}(r,n,a,i,o,c);default:throw new w("Unsupported JWE Content Encryption Algorithm")}},x=(...e)=>{const t=e.filter(Boolean);if(0===t.length||1===t.length)return!0;let r;for(const e of t){const t=Object.keys(e);if(r&&0!==r.size)for(const e of t){if(r.has(e))return!1;r.add(e)}else r=new Set(t)}return!0};function j(e){if("object"!=typeof(t=e)||null===t||"[object Object]"!==Object.prototype.toString.call(e))return!1;var t;if(null===Object.getPrototypeOf(e))return!0;let r=e;for(;null!==Object.getPrototypeOf(r);)r=Object.getPrototypeOf(r);return Object.getPrototypeOf(e)===r}const M=[{hash:"SHA-256",name:"HMAC"},!0,["sign"]];function I(e,t){if(e.algorithm.length!==parseInt(t.slice(1,4),10))throw new TypeError(`Invalid key size for alg: ${t}`)}function $(r,n,a){if(t(r))return k(r,n,a),r;if(r instanceof Uint8Array)return e.subtle.importKey("raw",r,"AES-KW",!0,[a]);throw new TypeError(U(r,...T,"Uint8Array"))}const B=async(t,r,n)=>{const a=await $(r,t,"wrapKey");I(a,t);const i=await e.subtle.importKey("raw",n,...M);return new Uint8Array(await e.subtle.wrapKey("raw",i,a,"AES-KW"))},G=async(t,r,n)=>{const a=await $(r,t,"unwrapKey");I(a,t);const i=await e.subtle.unwrapKey("raw",n,a,"AES-KW",...M);return new Uint8Array(await e.subtle.exportKey("raw",i))};async function F(a,i,o,c,l=new Uint8Array(0),h=new Uint8Array(0)){if(!t(a))throw new TypeError(U(a,...T));if(k(a,"ECDH"),!t(i))throw new TypeError(U(i,...T));k(i,"ECDH","deriveBits");const u=s(p(n.encode(o)),p(l),p(h),d(c));let y;y="X25519"===a.algorithm.name?256:"X448"===a.algorithm.name?448:Math.ceil(parseInt(a.algorithm.namedCurve.substr(-3),10)/8)<<3;return async function(e,t,n){const a=Math.ceil((t>>3)/32),i=new Uint8Array(32*a);for(let t=0;t<a;t++){const a=new Uint8Array(4+e.length+n.length);a.set(d(t+1)),a.set(e,4),a.set(n,4+e.length),i.set(await r("sha256",a),32*t)}return i.slice(0,t>>3)}(new Uint8Array(await e.subtle.deriveBits({name:a.algorithm.name,public:a},i,y)),c,u)}function N(e){if(!t(e))throw new TypeError(U(e,...T));return["P-256","P-384","P-521"].includes(e.algorithm.namedCurve)||"X25519"===e.algorithm.name||"X448"===e.algorithm.name}async function L(r,a,i,o){!function(e){if(!(e instanceof Uint8Array)||e.length<8)throw new f("PBES2 Salt Input must be 8 or more octets")}(r);const c=function(e,t){return s(n.encode(e),new Uint8Array([0]),t)}(a,r),d=parseInt(a.slice(13,16),10),p={hash:`SHA-${a.slice(8,11)}`,iterations:i,name:"PBKDF2",salt:c},l={length:d,name:"AES-KW"},h=await function(r,n){if(r instanceof Uint8Array)return e.subtle.importKey("raw",r,"PBKDF2",!1,["deriveBits"]);if(t(r))return k(r,n,"deriveBits","deriveKey"),r;throw new TypeError(U(r,...T,"Uint8Array"))}(o,a);if(h.usages.includes("deriveBits"))return new Uint8Array(await e.subtle.deriveBits(p,h,d));if(h.usages.includes("deriveKey"))return e.subtle.deriveKey(p,h,l,!1,["wrapKey","unwrapKey"]);throw new TypeError('PBKDF2 key "usages" must include "deriveBits" or "deriveKey"')}const z=async(e,t,r,n,a)=>{const i=await L(a,e,n,t);return G(e.slice(-6),i,r)};function V(e){switch(e){case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":return"RSA-OAEP";default:throw new w(`alg ${e} is not supported either by JOSE or your javascript runtime`)}}var X=(e,t)=>{if(e.startsWith("RS")||e.startsWith("PS")){const{modulusLength:r}=t.algorithm;if("number"!=typeof r||r<2048)throw new TypeError(`${e} requires key modulusLength to be 2048 bits or larger`)}};const q=async(r,n,a)=>{if(!t(n))throw new TypeError(U(n,...T));if(k(n,r,"decrypt","unwrapKey"),X(r,n),n.usages.includes("decrypt"))return new Uint8Array(await e.subtle.decrypt(V(r),n,a));if(n.usages.includes("unwrapKey")){const t=await e.subtle.unwrapKey("raw",a,n,V(r),...M);return new Uint8Array(await e.subtle.exportKey("raw",t))}throw new TypeError('RSA-OAEP key "usages" must include "decrypt" or "unwrapKey" for this operation')};function Y(e){switch(e){case"A128GCM":return 128;case"A192GCM":return 192;case"A256GCM":case"A128CBC-HS256":return 256;case"A192CBC-HS384":return 384;case"A256CBC-HS512":return 512;default:throw new w(`Unsupported JWE Algorithm: ${e}`)}}var Q=e=>S(new Uint8Array(Y(e)>>3));var Z=async t=>{if(!t.alg)throw new TypeError('"alg" argument is required when "jwk.alg" is not present');const{algorithm:r,keyUsages:n}=function(e){let t,r;switch(e.kty){case"RSA":switch(e.alg){case"PS256":case"PS384":case"PS512":t={name:"RSA-PSS",hash:`SHA-${e.alg.slice(-3)}`},r=e.d?["sign"]:["verify"];break;case"RS256":case"RS384":case"RS512":t={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${e.alg.slice(-3)}`},r=e.d?["sign"]:["verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":t={name:"RSA-OAEP",hash:`SHA-${parseInt(e.alg.slice(-3),10)||1}`},r=e.d?["decrypt","unwrapKey"]:["encrypt","wrapKey"];break;default:throw new w('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"EC":switch(e.alg){case"ES256":t={name:"ECDSA",namedCurve:"P-256"},r=e.d?["sign"]:["verify"];break;case"ES384":t={name:"ECDSA",namedCurve:"P-384"},r=e.d?["sign"]:["verify"];break;case"ES512":t={name:"ECDSA",namedCurve:"P-521"},r=e.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":t={name:"ECDH",namedCurve:e.crv},r=e.d?["deriveBits"]:[];break;default:throw new w('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"OKP":switch(e.alg){case"EdDSA":t={name:e.crv},r=e.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":t={name:e.crv},r=e.d?["deriveBits"]:[];break;default:throw new w('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;default:throw new w('Invalid or unsupported JWK "kty" (Key Type) Parameter value')}return{algorithm:t,keyUsages:r}}(t),a=[r,t.ext??!1,t.key_ops??n],i={...t};return delete i.alg,delete i.use,e.subtle.importKey("jwk",i,...a)};async function ee(e,t){if(!j(e))throw new TypeError("JWK must be an object");switch(t||(t=e.alg),e.kty){case"oct":if("string"!=typeof e.k||!e.k)throw new TypeError('missing "k" (Key Value) Parameter value');return h(e.k);case"RSA":if(void 0!==e.oth)throw new w('RSA JWK "oth" (Other Primes Info) Parameter value is not supported');case"EC":case"OKP":return Z({...e,alg:t});default:throw new w('Unsupported "kty" (Key Type) Parameter value')}}const te=(e,t,r)=>{e.startsWith("HS")||"dir"===e||e.startsWith("PBES2")||/^A\d{3}(?:GCM)?KW$/.test(e)?((e,t)=>{if(!(t instanceof Uint8Array)){if(!R(t))throw new TypeError(J(e,t,...T,"Uint8Array"));if("secret"!==t.type)throw new TypeError(`${T.join(" or ")} instances for symmetric algorithms must be of type "secret"`)}})(e,t):((e,t,r)=>{if(!R(t))throw new TypeError(J(e,t,...T));if("secret"===t.type)throw new TypeError(`${T.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);if("sign"===r&&"public"===t.type)throw new TypeError(`${T.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);if("decrypt"===r&&"public"===t.type)throw new TypeError(`${T.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);if(t.algorithm&&"verify"===r&&"private"===t.type)throw new TypeError(`${T.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);if(t.algorithm&&"encrypt"===r&&"private"===t.type)throw new TypeError(`${T.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`)})(e,t,r)};const re=async(r,n,a,i,o)=>{if(!(t(a)||a instanceof Uint8Array))throw new TypeError(U(a,...T,"Uint8Array"));switch(i?b(r,i):i=S(new Uint8Array(A(r)>>3)),r){case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return a instanceof Uint8Array&&H(a,parseInt(r.slice(-3),10)),async function(t,r,n,a,i){if(!(n instanceof Uint8Array))throw new TypeError(U(n,"Uint8Array"));const o=parseInt(t.slice(1,4),10),d=await e.subtle.importKey("raw",n.subarray(o>>3),"AES-CBC",!1,["encrypt"]),p=await e.subtle.importKey("raw",n.subarray(0,o>>3),{hash:"SHA-"+(o<<1),name:"HMAC"},!1,["sign"]),l=new Uint8Array(await e.subtle.encrypt({iv:a,name:"AES-CBC"},d,r)),h=s(i,a,l,c(i.length<<3));return{ciphertext:l,tag:new Uint8Array((await e.subtle.sign("HMAC",p,h)).slice(0,o>>3)),iv:a}}(r,n,a,i,o);case"A128GCM":case"A192GCM":case"A256GCM":return a instanceof Uint8Array&&H(a,parseInt(r.slice(1,4),10)),async function(t,r,n,a,i){let s;n instanceof Uint8Array?s=await e.subtle.importKey("raw",n,"AES-GCM",!1,["encrypt"]):(k(n,t,"encrypt"),s=n);const o=new Uint8Array(await e.subtle.encrypt({additionalData:i,iv:a,name:"AES-GCM",tagLength:128},s,r)),c=o.slice(-16);return{ciphertext:o.slice(0,-16),tag:c,iv:a}}(r,n,a,i,o);default:throw new w("Unsupported JWE Content Encryption Algorithm")}};async function ne(e,t,r,n,a){switch(te(e,t,"decrypt"),e){case"dir":if(void 0!==r)throw new f("Encountered unexpected JWE Encrypted Key");return t;case"ECDH-ES":if(void 0!==r)throw new f("Encountered unexpected JWE Encrypted Key");case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":{if(!j(n.epk))throw new f('JOSE Header "epk" (Ephemeral Public Key) missing or invalid');if(!N(t))throw new w("ECDH with the provided key is not allowed or not supported by your javascript runtime");const a=await ee(n.epk,e);let i,s;if(void 0!==n.apu){if("string"!=typeof n.apu)throw new f('JOSE Header "apu" (Agreement PartyUInfo) invalid');try{i=h(n.apu)}catch{throw new f("Failed to base64url decode the apu")}}if(void 0!==n.apv){if("string"!=typeof n.apv)throw new f('JOSE Header "apv" (Agreement PartyVInfo) invalid');try{s=h(n.apv)}catch{throw new f("Failed to base64url decode the apv")}}const o=await F(a,t,"ECDH-ES"===e?n.enc:e,"ECDH-ES"===e?Y(n.enc):parseInt(e.slice(-5,-2),10),i,s);if("ECDH-ES"===e)return o;if(void 0===r)throw new f("JWE Encrypted Key missing");return G(e.slice(-6),o,r)}case"RSA1_5":case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":if(void 0===r)throw new f("JWE Encrypted Key missing");return q(e,t,r);case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":{if(void 0===r)throw new f("JWE Encrypted Key missing");if("number"!=typeof n.p2c)throw new f('JOSE Header "p2c" (PBES2 Count) missing or invalid');const i=a?.maxPBES2Count||1e4;if(n.p2c>i)throw new f('JOSE Header "p2c" (PBES2 Count) out is of acceptable bounds');if("string"!=typeof n.p2s)throw new f('JOSE Header "p2s" (PBES2 Salt) missing or invalid');let s;try{s=h(n.p2s)}catch{throw new f("Failed to base64url decode the p2s")}return z(e,t,r,n.p2c,s)}case"A128KW":case"A192KW":case"A256KW":if(void 0===r)throw new f("JWE Encrypted Key missing");return G(e,t,r);case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":{if(void 0===r)throw new f("JWE Encrypted Key missing");if("string"!=typeof n.iv)throw new f('JOSE Header "iv" (Initialization Vector) missing or invalid');if("string"!=typeof n.tag)throw new f('JOSE Header "tag" (Authentication Tag) missing or invalid');let a,i;try{a=h(n.iv)}catch{throw new f("Failed to base64url decode the iv")}try{i=h(n.tag)}catch{throw new f("Failed to base64url decode the tag")}return async function(e,t,r,n,a){const i=e.slice(0,7);return O(i,t,r,n,a,new Uint8Array(0))}(e,t,r,a,i)}default:throw new w('Invalid or unsupported "alg" (JWE Algorithm) header value')}}function ae(e,t,r,n,a){if(void 0!==a.crit&&void 0===n?.crit)throw new e('"crit" (Critical) Header Parameter MUST be integrity protected');if(!n||void 0===n.crit)return new Set;if(!Array.isArray(n.crit)||0===n.crit.length||n.crit.some((e=>"string"!=typeof e||0===e.length)))throw new e('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');let i;i=void 0!==r?new Map([...Object.entries(r),...t.entries()]):t;for(const t of n.crit){if(!i.has(t))throw new w(`Extension Header Parameter "${t}" is not recognized`);if(void 0===a[t])throw new e(`Extension Header Parameter "${t}" is missing`);if(i.get(t)&&void 0===n[t])throw new e(`Extension Header Parameter "${t}" MUST be integrity protected`)}return new Set(n.crit)}const ie=(e,t)=>{if(void 0!==t&&(!Array.isArray(t)||t.some((e=>"string"!=typeof e))))throw new TypeError(`"${e}" option must be an array of strings`);if(t)return new Set(t)};async function se(e,t,r){if(!j(e))throw new f("Flattened JWE must be an object");if(void 0===e.protected&&void 0===e.header&&void 0===e.unprotected)throw new f("JOSE Header missing");if(void 0!==e.iv&&"string"!=typeof e.iv)throw new f("JWE Initialization Vector incorrect type");if("string"!=typeof e.ciphertext)throw new f("JWE Ciphertext missing or incorrect type");if(void 0!==e.tag&&"string"!=typeof e.tag)throw new f("JWE Authentication Tag incorrect type");if(void 0!==e.protected&&"string"!=typeof e.protected)throw new f("JWE Protected Header incorrect type");if(void 0!==e.encrypted_key&&"string"!=typeof e.encrypted_key)throw new f("JWE Encrypted Key incorrect type");if(void 0!==e.aad&&"string"!=typeof e.aad)throw new f("JWE AAD incorrect type");if(void 0!==e.header&&!j(e.header))throw new f("JWE Shared Unprotected Header incorrect type");if(void 0!==e.unprotected&&!j(e.unprotected))throw new f("JWE Per-Recipient Unprotected Header incorrect type");let i;if(e.protected)try{const t=h(e.protected);i=JSON.parse(a.decode(t))}catch{throw new f("JWE Protected Header is invalid")}if(!x(i,e.header,e.unprotected))throw new f("JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint");const o={...i,...e.header,...e.unprotected};if(ae(f,new Map,r?.crit,i,o),void 0!==o.zip)throw new w('JWE "zip" (Compression Algorithm) Header Parameter is not supported.');const{alg:c,enc:d}=o;if("string"!=typeof c||!c)throw new f("missing JWE Algorithm (alg) in JWE Header");if("string"!=typeof d||!d)throw new f("missing JWE Encryption Algorithm (enc) in JWE Header");const p=r&&ie("keyManagementAlgorithms",r.keyManagementAlgorithms),l=r&&ie("contentEncryptionAlgorithms",r.contentEncryptionAlgorithms);if(p&&!p.has(c)||!p&&c.startsWith("PBES2"))throw new y('"alg" (Algorithm) Header Parameter value not allowed');if(l&&!l.has(d))throw new y('"enc" (Encryption Algorithm) Header Parameter value not allowed');let u;if(void 0!==e.encrypted_key)try{u=h(e.encrypted_key)}catch{throw new f("Failed to base64url decode the encrypted_key")}let g,m,E,S=!1;"function"==typeof t&&(t=await t(i,e),S=!0);try{g=await ne(c,t,u,o,r)}catch(e){if(e instanceof TypeError||e instanceof f||e instanceof w)throw e;g=Q(d)}if(void 0!==e.iv)try{m=h(e.iv)}catch{throw new f("Failed to base64url decode the iv")}if(void 0!==e.tag)try{E=h(e.tag)}catch{throw new f("Failed to base64url decode the tag")}const A=n.encode(e.protected??"");let b,H;b=void 0!==e.aad?s(A,n.encode("."),n.encode(e.aad)):A;try{H=h(e.ciphertext)}catch{throw new f("Failed to base64url decode the ciphertext")}const v={plaintext:await O(d,g,H,m,E,b)};if(void 0!==e.protected&&(v.protectedHeader=i),void 0!==e.aad)try{v.additionalAuthenticatedData=h(e.aad)}catch{throw new f("Failed to base64url decode the aad")}return void 0!==e.unprotected&&(v.sharedUnprotectedHeader=e.unprotected),void 0!==e.header&&(v.unprotectedHeader=e.header),S?{...v,key:t}:v}var oe=async r=>{if(r instanceof Uint8Array)return{kty:"oct",k:l(r)};if(!t(r))throw new TypeError(U(r,...T,"Uint8Array"));if(!r.extractable)throw new TypeError("non-extractable CryptoKey cannot be exported as a JWK");const{ext:n,key_ops:a,alg:i,use:s,...o}=await e.subtle.exportKey("jwk",r);return o};async function ce(e){return oe(e)}async function de(r,n,a,i,s={}){let o,c,d;switch(te(r,a,"encrypt"),r){case"dir":d=a;break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":{if(!N(a))throw new w("ECDH with the provided key is not allowed or not supported by your javascript runtime");const{apu:p,apv:h}=s;let{epk:u}=s;u||(u=(await async function(r){if(!t(r))throw new TypeError(U(r,...T));return e.subtle.generateKey(r.algorithm,!0,["deriveBits"])}(a)).privateKey);const{x:y,y:g,crv:f,kty:m}=await ce(u),E=await F(a,u,"ECDH-ES"===r?n:r,"ECDH-ES"===r?Y(n):parseInt(r.slice(-5,-2),10),p,h);if(c={epk:{x:y,crv:f,kty:m}},"EC"===m&&(c.epk.y=g),p&&(c.apu=l(p)),h&&(c.apv=l(h)),"ECDH-ES"===r){d=E;break}d=i||Q(n);const S=r.slice(-6);o=await B(S,E,d);break}case"RSA1_5":case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":d=i||Q(n),o=await(async(r,n,a)=>{if(!t(n))throw new TypeError(U(n,...T));if(k(n,r,"encrypt","wrapKey"),X(r,n),n.usages.includes("encrypt"))return new Uint8Array(await e.subtle.encrypt(V(r),n,a));if(n.usages.includes("wrapKey")){const t=await e.subtle.importKey("raw",a,...M);return new Uint8Array(await e.subtle.wrapKey("raw",t,n,V(r)))}throw new TypeError('RSA-OAEP key "usages" must include "encrypt" or "wrapKey" for this operation')})(r,a,d);break;case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":{d=i||Q(n);const{p2c:e,p2s:t}=s;({encryptedKey:o,...c}=await(async(e,t,r,n=2048,a=S(new Uint8Array(16)))=>{const i=await L(a,e,n,t);return{encryptedKey:await B(e.slice(-6),i,r),p2c:n,p2s:l(a)}})(r,a,d,e,t));break}case"A128KW":case"A192KW":case"A256KW":d=i||Q(n),o=await B(r,a,d);break;case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":{d=i||Q(n);const{iv:e}=s;({encryptedKey:o,...c}=await async function(e,t,r,n){const a=e.slice(0,7),i=await re(a,r,t,n,new Uint8Array(0));return{encryptedKey:i.ciphertext,iv:l(i.iv),tag:l(i.tag)}}(r,a,d,e));break}default:throw new w('Invalid or unsupported "alg" (JWE Algorithm) header value')}return{cek:d,encryptedKey:o,parameters:c}}const pe=Symbol();class le{constructor(e){if(!(e instanceof Uint8Array))throw new TypeError("plaintext must be an instance of Uint8Array");this._plaintext=e}setKeyManagementParameters(e){if(this._keyManagementParameters)throw new TypeError("setKeyManagementParameters can only be called once");return this._keyManagementParameters=e,this}setProtectedHeader(e){if(this._protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this._protectedHeader=e,this}setSharedUnprotectedHeader(e){if(this._sharedUnprotectedHeader)throw new TypeError("setSharedUnprotectedHeader can only be called once");return this._sharedUnprotectedHeader=e,this}setUnprotectedHeader(e){if(this._unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this._unprotectedHeader=e,this}setAdditionalAuthenticatedData(e){return this._aad=e,this}setContentEncryptionKey(e){if(this._cek)throw new TypeError("setContentEncryptionKey can only be called once");return this._cek=e,this}setInitializationVector(e){if(this._iv)throw new TypeError("setInitializationVector can only be called once");return this._iv=e,this}async encrypt(e,t){if(!this._protectedHeader&&!this._unprotectedHeader&&!this._sharedUnprotectedHeader)throw new f("either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()");if(!x(this._protectedHeader,this._unprotectedHeader,this._sharedUnprotectedHeader))throw new f("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");const r={...this._protectedHeader,...this._unprotectedHeader,...this._sharedUnprotectedHeader};if(ae(f,new Map,t?.crit,this._protectedHeader,r),void 0!==r.zip)throw new w('JWE "zip" (Compression Algorithm) Header Parameter is not supported.');const{alg:i,enc:o}=r;if("string"!=typeof i||!i)throw new f('JWE "alg" (Algorithm) Header Parameter missing or invalid');if("string"!=typeof o||!o)throw new f('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');let c,d,p,h,u;if(this._cek&&("dir"===i||"ECDH-ES"===i))throw new TypeError(`setContentEncryptionKey cannot be called with JWE "alg" (Algorithm) Header ${i}`);{let r;({cek:d,encryptedKey:c,parameters:r}=await de(i,o,e,this._cek,this._keyManagementParameters)),r&&(t&&pe in t?this._unprotectedHeader?this._unprotectedHeader={...this._unprotectedHeader,...r}:this.setUnprotectedHeader(r):this._protectedHeader?this._protectedHeader={...this._protectedHeader,...r}:this.setProtectedHeader(r))}h=this._protectedHeader?n.encode(l(JSON.stringify(this._protectedHeader))):n.encode(""),this._aad?(u=l(this._aad),p=s(h,n.encode("."),n.encode(u))):p=h;const{ciphertext:y,tag:g,iv:m}=await re(o,this._plaintext,d,this._iv,p),E={ciphertext:l(y)};return m&&(E.iv=l(m)),g&&(E.tag=l(g)),c&&(E.encrypted_key=l(c)),u&&(E.aad=u),this._protectedHeader&&(E.protected=a.decode(h)),this._sharedUnprotectedHeader&&(E.unprotected=this._sharedUnprotectedHeader),this._unprotectedHeader&&(E.header=this._unprotectedHeader),E}}class he{constructor(e,t,r){this.parent=e,this.key=t,this.options=r}setUnprotectedHeader(e){if(this.unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this.unprotectedHeader=e,this}addRecipient(...e){return this.parent.addRecipient(...e)}encrypt(...e){return this.parent.encrypt(...e)}done(){return this.parent}}class ue{constructor(e){this._recipients=[],this._plaintext=e}addRecipient(e,t){const r=new he(this,e,{crit:t?.crit});return this._recipients.push(r),r}setProtectedHeader(e){if(this._protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this._protectedHeader=e,this}setSharedUnprotectedHeader(e){if(this._unprotectedHeader)throw new TypeError("setSharedUnprotectedHeader can only be called once");return this._unprotectedHeader=e,this}setAdditionalAuthenticatedData(e){return this._aad=e,this}async encrypt(){if(!this._recipients.length)throw new f("at least one recipient must be added");if(1===this._recipients.length){const[e]=this._recipients,t=await new le(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(e.unprotectedHeader).encrypt(e.key,{...e.options}),r={ciphertext:t.ciphertext,iv:t.iv,recipients:[{}],tag:t.tag};return t.aad&&(r.aad=t.aad),t.protected&&(r.protected=t.protected),t.unprotected&&(r.unprotected=t.unprotected),t.encrypted_key&&(r.recipients[0].encrypted_key=t.encrypted_key),t.header&&(r.recipients[0].header=t.header),r}let e;for(let t=0;t<this._recipients.length;t++){const r=this._recipients[t];if(!x(this._protectedHeader,this._unprotectedHeader,r.unprotectedHeader))throw new f("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");const n={...this._protectedHeader,...this._unprotectedHeader,...r.unprotectedHeader},{alg:a}=n;if("string"!=typeof a||!a)throw new f('JWE "alg" (Algorithm) Header Parameter missing or invalid');if("dir"===a||"ECDH-ES"===a)throw new f('"dir" and "ECDH-ES" alg may only be used with a single recipient');if("string"!=typeof n.enc||!n.enc)throw new f('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');if(e){if(e!==n.enc)throw new f('JWE "enc" (Encryption Algorithm) Header Parameter must be the same for all recipients')}else e=n.enc;if(ae(f,new Map,r.options.crit,this._protectedHeader,n),void 0!==n.zip)throw new w('JWE "zip" (Compression Algorithm) Header Parameter is not supported.')}const t=Q(e),r={ciphertext:"",iv:"",recipients:[],tag:""};for(let n=0;n<this._recipients.length;n++){const a=this._recipients[n],i={};r.recipients.push(i);const s={...this._protectedHeader,...this._unprotectedHeader,...a.unprotectedHeader}.alg.startsWith("PBES2")?2048+n:void 0;if(0===n){const e=await new le(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(t).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(a.unprotectedHeader).setKeyManagementParameters({p2c:s}).encrypt(a.key,{...a.options,[pe]:!0});r.ciphertext=e.ciphertext,r.iv=e.iv,r.tag=e.tag,e.aad&&(r.aad=e.aad),e.protected&&(r.protected=e.protected),e.unprotected&&(r.unprotected=e.unprotected),i.encrypted_key=e.encrypted_key,e.header&&(i.header=e.header);continue}const{encryptedKey:o,parameters:c}=await de(a.unprotectedHeader?.alg||this._protectedHeader?.alg||this._unprotectedHeader?.alg,e,a.key,t,{p2c:s});i.encrypted_key=l(o),(a.unprotectedHeader||c)&&(i.header={...a.unprotectedHeader,...c})}return r}}function ye(e,t){const r=`SHA-${e.slice(-3)}`;switch(e){case"HS256":case"HS384":case"HS512":return{hash:r,name:"HMAC"};case"PS256":case"PS384":case"PS512":return{hash:r,name:"RSA-PSS",saltLength:e.slice(-3)>>3};case"RS256":case"RS384":case"RS512":return{hash:r,name:"RSASSA-PKCS1-v1_5"};case"ES256":case"ES384":case"ES512":return{hash:r,name:"ECDSA",namedCurve:t.namedCurve};case"EdDSA":return{name:t.name};default:throw new w(`alg ${e} is not supported either by JOSE or your javascript runtime`)}}function we(r,n,a){if(t(n))return _(n,r,a),n;if(n instanceof Uint8Array){if(!r.startsWith("HS"))throw new TypeError(U(n,...T));return e.subtle.importKey("raw",n,{hash:`SHA-${r.slice(-3)}`,name:"HMAC"},!1,[a])}throw new TypeError(U(n,...T,"Uint8Array"))}const ge=async(t,r,n,a)=>{const i=await we(t,r,"verify");X(t,i);const s=ye(t,i.algorithm);try{return await e.subtle.verify(s,i,n,a)}catch{return!1}};async function fe(e,t,r){if(!j(e))throw new m("Flattened JWS must be an object");if(void 0===e.protected&&void 0===e.header)throw new m('Flattened JWS must have either of the "protected" or "header" members');if(void 0!==e.protected&&"string"!=typeof e.protected)throw new m("JWS Protected Header incorrect type");if(void 0===e.payload)throw new m("JWS Payload missing");if("string"!=typeof e.signature)throw new m("JWS Signature missing or incorrect type");if(void 0!==e.header&&!j(e.header))throw new m("JWS Unprotected Header incorrect type");let i={};if(e.protected)try{const t=h(e.protected);i=JSON.parse(a.decode(t))}catch{throw new m("JWS Protected Header is invalid")}if(!x(i,e.header))throw new m("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");const o={...i,...e.header};let c=!0;if(ae(m,new Map([["b64",!0]]),r?.crit,i,o).has("b64")&&(c=i.b64,"boolean"!=typeof c))throw new m('The "b64" (base64url-encode payload) Header Parameter must be a boolean');const{alg:d}=o;if("string"!=typeof d||!d)throw new m('JWS "alg" (Algorithm) Header Parameter missing or invalid');const p=r&&ie("algorithms",r.algorithms);if(p&&!p.has(d))throw new y('"alg" (Algorithm) Header Parameter value not allowed');if(c){if("string"!=typeof e.payload)throw new m("JWS Payload must be a string")}else if("string"!=typeof e.payload&&!(e.payload instanceof Uint8Array))throw new m("JWS Payload must be a string or an Uint8Array instance");let l=!1;"function"==typeof t&&(t=await t(i,e),l=!0),te(d,t,"verify");const u=s(n.encode(e.protected??""),n.encode("."),"string"==typeof e.payload?n.encode(e.payload):e.payload);let w;try{w=h(e.signature)}catch{throw new m("Failed to base64url decode the signature")}if(!await ge(d,t,w,u))throw new E;let g;if(c)try{g=h(e.payload)}catch{throw new m("Failed to base64url decode the payload")}else g="string"==typeof e.payload?n.encode(e.payload):e.payload;const f={payload:g};return void 0!==e.protected&&(f.protectedHeader=i),void 0!==e.header&&(f.unprotectedHeader=e.header),l?{...f,key:t}:f}class me{constructor(e){this._flattened=new le(e)}setContentEncryptionKey(e){return this._flattened.setContentEncryptionKey(e),this}setInitializationVector(e){return this._flattened.setInitializationVector(e),this}setProtectedHeader(e){return this._flattened.setProtectedHeader(e),this}setKeyManagementParameters(e){return this._flattened.setKeyManagementParameters(e),this}async encrypt(e,t){const r=await this._flattened.encrypt(e,t);return[r.protected,r.encrypted_key,r.iv,r.ciphertext,r.tag].join(".")}}class Ee{constructor(e){if(!(e instanceof Uint8Array))throw new TypeError("payload must be an instance of Uint8Array");this._payload=e}setProtectedHeader(e){if(this._protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this._protectedHeader=e,this}setUnprotectedHeader(e){if(this._unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this._unprotectedHeader=e,this}async sign(t,r){if(!this._protectedHeader&&!this._unprotectedHeader)throw new m("either setProtectedHeader or setUnprotectedHeader must be called before #sign()");if(!x(this._protectedHeader,this._unprotectedHeader))throw new m("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");const i={...this._protectedHeader,...this._unprotectedHeader};let o=!0;if(ae(m,new Map([["b64",!0]]),r?.crit,this._protectedHeader,i).has("b64")&&(o=this._protectedHeader.b64,"boolean"!=typeof o))throw new m('The "b64" (base64url-encode payload) Header Parameter must be a boolean');const{alg:c}=i;if("string"!=typeof c||!c)throw new m('JWS "alg" (Algorithm) Header Parameter missing or invalid');te(c,t,"sign");let d,p=this._payload;o&&(p=n.encode(l(p))),d=this._protectedHeader?n.encode(l(JSON.stringify(this._protectedHeader))):n.encode("");const h=s(d,n.encode("."),p),u=await(async(t,r,n)=>{const a=await we(t,r,"sign");X(t,a);const i=await e.subtle.sign(ye(t,a.algorithm),a,n);return new Uint8Array(i)})(c,t,h),y={signature:l(u),payload:""};return o&&(y.payload=a.decode(p)),this._unprotectedHeader&&(y.header=this._unprotectedHeader),this._protectedHeader&&(y.protected=a.decode(d)),y}}class Se{constructor(e){this._flattened=new Ee(e)}setProtectedHeader(e){return this._flattened.setProtectedHeader(e),this}async sign(e,t){const r=await this._flattened.sign(e,t);if(void 0===r.payload)throw new TypeError("use the flattened module for creating JWS with b64: false");return`${r.protected}.${r.payload}.${r.signature}`}}class Ae{constructor(e,t,r){this.parent=e,this.key=t,this.options=r}setProtectedHeader(e){if(this.protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this.protectedHeader=e,this}setUnprotectedHeader(e){if(this.unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this.unprotectedHeader=e,this}addSignature(...e){return this.parent.addSignature(...e)}sign(...e){return this.parent.sign(...e)}done(){return this.parent}}class be{constructor(e){this._signatures=[],this._payload=e}addSignature(e,t){const r=new Ae(this,e,t);return this._signatures.push(r),r}async sign(){if(!this._signatures.length)throw new m("at least one signature must be added");const e={signatures:[],payload:""};for(let t=0;t<this._signatures.length;t++){const r=this._signatures[t],n=new Ee(this._payload);n.setProtectedHeader(r.protectedHeader),n.setUnprotectedHeader(r.unprotectedHeader);const{payload:a,...i}=await n.sign(r.key,r.options);if(0===t)e.payload=a;else if(e.payload!==a)throw new m("inconsistent use of JWS Unencoded Payload (RFC7797)");e.signatures.push(i)}return e}}const He=l,ve=h;function Ke(e){const t=e?.modulusLength??2048;if("number"!=typeof t||t<2048)throw new w("Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used");return t}async function Pe(t,r){return async function(t,r){let n,a;switch(t){case"PS256":case"PS384":case"PS512":n={name:"RSA-PSS",hash:`SHA-${t.slice(-3)}`,publicExponent:new Uint8Array([1,0,1]),modulusLength:Ke(r)},a=["sign","verify"];break;case"RS256":case"RS384":case"RS512":n={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${t.slice(-3)}`,publicExponent:new Uint8Array([1,0,1]),modulusLength:Ke(r)},a=["sign","verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":n={name:"RSA-OAEP",hash:`SHA-${parseInt(t.slice(-3),10)||1}`,publicExponent:new Uint8Array([1,0,1]),modulusLength:Ke(r)},a=["decrypt","unwrapKey","encrypt","wrapKey"];break;case"ES256":n={name:"ECDSA",namedCurve:"P-256"},a=["sign","verify"];break;case"ES384":n={name:"ECDSA",namedCurve:"P-384"},a=["sign","verify"];break;case"ES512":n={name:"ECDSA",namedCurve:"P-521"},a=["sign","verify"];break;case"EdDSA":{a=["sign","verify"];const e=r?.crv??"Ed25519";switch(e){case"Ed25519":case"Ed448":n={name:e};break;default:throw new w("Invalid or unsupported crv option provided")}break}case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":{a=["deriveKey","deriveBits"];const e=r?.crv??"P-256";switch(e){case"P-256":case"P-384":case"P-521":n={name:"ECDH",namedCurve:e};break;case"X25519":case"X448":n={name:e};break;default:throw new w("Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448")}break}default:throw new w('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}return e.subtle.generateKey(n,r?.extractable??!1,a)}(t,r)}async function Ce(t,r){return async function(t,r){let n,a,i;switch(t){case"HS256":case"HS384":case"HS512":n=parseInt(t.slice(-3),10),a={name:"HMAC",hash:`SHA-${n}`,length:n},i=["sign","verify"];break;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return n=parseInt(t.slice(-3),10),S(new Uint8Array(n>>3));case"A128KW":case"A192KW":case"A256KW":n=parseInt(t.slice(1,4),10),a={name:"AES-KW",length:n},i=["wrapKey","unwrapKey"];break;case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":case"A128GCM":case"A192GCM":case"A256GCM":n=parseInt(t.slice(1,4),10),a={name:"AES-GCM",length:n},i=["encrypt","decrypt"];break;default:throw new w('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}return e.subtle.generateKey(a,r?.extractable??!1,i)}(t,r)}const _e="ECDSA",ke="P-384",We="ES384",Ue="SHA-256",Je="RSA-OAEP-256",Re="AES-GCM",Te="A256GCM",De="PBES2-HS512+A256KW",Oe=!0;const xe={decodeProtectedHeader:function(e){let t;if("string"==typeof e){const r=e.split(".");3!==r.length&&5!==r.length||([t]=r)}else if("object"==typeof e&&e){if(!("protected"in e))throw new TypeError("Token does not contain a Protected Header");t=e.protected}try{if("string"!=typeof t||!t)throw new Error;const e=JSON.parse(a.decode(ve(t)));if(!j(e))throw new Error;return e}catch{throw new TypeError("Invalid Token or Protected Header formatting")}},isEmptyJWSPayload:e=>!e.split(".")[1],inputBuffer(e,t){if(ArrayBuffer.isView(e)&&!t.cty)return e;let r=t.cty||"";return r.includes("text")||"string"==typeof e?t.cty=r||"text/plain":(t.cty=r||"json",e=JSON.stringify(e)),(new TextEncoder).encode(e)},recoverDataFromContentType:(e,{cty:t=e?.protectedHeader?.cty}={})=>(e&&!Object.prototype.hasOwnProperty.call(e,"payload")&&(e.payload=e.plaintext),t&&e?.payload?(e.text=(new TextDecoder).decode(e.payload),t.includes("json")&&(e.json=JSON.parse(e.text)),e):e),generateSigningKey:()=>Pe(We,{extractable:Oe}),async sign(e,t,r={}){let n={alg:We,...r},a=this.inputBuffer(t,n);return new Se(a).setProtectedHeader(n).sign(e)},async verify(e,t,r){let n=await async function(e,t,r){if(e instanceof Uint8Array&&(e=a.decode(e)),"string"!=typeof e)throw new m("Compact JWS must be a string or Uint8Array");const{0:n,1:i,2:s,length:o}=e.split(".");if(3!==o)throw new m("Invalid Compact JWS");const c=await fe({payload:i,protected:n,signature:s},t,r),d={payload:c.payload,protectedHeader:c.protectedHeader};return"function"==typeof t?{...d,key:c.key}:d}(t,e).catch((()=>{}));return this.recoverDataFromContentType(n,r)},generateEncryptingKey:()=>Pe(Je,{extractable:Oe,modulusLength:4096}),async encrypt(e,t,r={}){let n={alg:this.isSymmetric(e)?"dir":Je,enc:Te,...r},a=this.inputBuffer(t,n),i=this.keySecret(e);return new me(a).setProtectedHeader(n).encrypt(i)},async decrypt(e,t,r={}){let n=this.keySecret(e),i=await async function(e,t,r){if(e instanceof Uint8Array&&(e=a.decode(e)),"string"!=typeof e)throw new f("Compact JWE must be a string or Uint8Array");const{0:n,1:i,2:s,3:o,4:c,length:d}=e.split(".");if(5!==d)throw new f("Invalid Compact JWE");const p=await se({ciphertext:o,iv:s||void 0,protected:n,tag:c||void 0,encrypted_key:i||void 0},t,r),l={plaintext:p.plaintext,protectedHeader:p.protectedHeader};return"function"==typeof t?{...l,key:p.key}:l}(t,n);return this.recoverDataFromContentType(i,r),i},async generateSecretKey(e){let t=(new TextEncoder).encode(e),r=await function(e,t){return crypto.subtle.digest(e,t)}(Ue,t);return{type:"secret",text:new Uint8Array(r)}},generateSymmetricKey(e){return e?this.generateSecretKey(e):Ce(Te,{extractable:Oe})},isSymmetric:e=>"secret"===e.type,keySecret:e=>e.text?e.text:e,async exportRaw(e){let t=await function(e){return crypto.subtle.exportKey("raw",e)}(e);return He(new Uint8Array(t))},importRaw:async e=>function(e){const t={name:_e,namedCurve:ke};return crypto.subtle.importKey("raw",e,t,Oe,["verify"])}(ve(e)),async exportJWK(e){let t=await ce(e),r=e.algorithm;if(r)r.name===_e&&r.namedCurve===ke?t.alg=We:"RSA-OAEP"===r.name&&r.hash.name===Ue?t.alg=Je:r.name===Re&&256===r.length&&(t.alg=Te);else switch(t.kty){case"EC":t.alg=We;break;case"RSA":t.alg=Je;break;case"oct":t.alg=Te}return t},async importJWK(e){e={ext:!0,...e};let t=await ee(e);return t instanceof Uint8Array&&(t=await function(e){const t={name:Re,length:256};return crypto.subtle.importKey("raw",e,t,!0,["encrypt","decrypt"])}(t)),t},async wrapKey(e,t,r={}){let n=await this.exportJWK(e);return this.encrypt(t,n,r)},async unwrapKey(e,t){let r=await this.decrypt(t,e);return this.importJWK(r.json)}};const je={isMultiKey:e=>"multi"===(e.type||"multi"),keyTags:e=>Object.keys(e).filter((e=>"type"!==e)),async exportJWK(e){if(!this.isMultiKey(e))return super.exportJWK(e);let t=this.keyTags(e),r=await Promise.all(t.map((async t=>{let r=await this.exportJWK(e[t]);return r.kid=t,r})));return{keys:r}},async importJWK(e){if(!e.keys)return super.importJWK(e);let t={};return await Promise.all(e.keys.map((async e=>t[e.kid]=await this.importJWK(e)))),t},async encrypt(e,t,r={}){if(!this.isMultiKey(e))return super.encrypt(e,t,r);let n={enc:Te,...r},a=this.inputBuffer(t,n),i=new ue(a).setProtectedHeader(n);for(let t of this.keyTags(e)){let r=e[t],n="string"==typeof r,a=n||this.isSymmetric(r),s=n?(new TextEncoder).encode(r):this.keySecret(r),o=n?De:a?"A256GCMKW":Je;i.addRecipient(s).setUnprotectedHeader({kid:t,alg:o})}return await i.encrypt()},async decrypt(e,t,r){if(!this.isMultiKey(e))return super.decrypt(e,t,r);let n=t,{recipients:a}=n,i=a.map((async({header:t})=>{let{kid:r}=t,a=e[r],i={};if(!a)return Promise.reject("missing");"string"==typeof a&&(a=(new TextEncoder).encode(a),i.keyManagementAlgorithms=[De]);let s=await async function(e,t,r){if(!j(e))throw new f("General JWE must be an object");if(!Array.isArray(e.recipients)||!e.recipients.every(j))throw new f("JWE Recipients missing or incorrect type");if(!e.recipients.length)throw new f("JWE Recipients has no members");for(const n of e.recipients)try{return await se({aad:e.aad,ciphertext:e.ciphertext,encrypted_key:n.encrypted_key,header:n.header,iv:e.iv,protected:e.protected,tag:e.tag,unprotected:e.unprotected},t,r)}catch{}throw new g}(n,this.keySecret(a),i),o=s.unprotectedHeader.kid;return o!==r?function(e,t){let r=`Key ${e} does not match encoded ${t}.`;return Promise.reject(r)}(r,o):s}));return await Promise.any(i).then((e=>(this.recoverDataFromContentType(e,r),e)),(()=>{}))},async sign(e,t,r={}){if(!this.isMultiKey(e))return super.sign(e,t,r);let n=this.inputBuffer(t,r),a=new be(n);for(let t of this.keyTags(e)){let n=e[t],i={kid:t,alg:We,...r};a.addSignature(n).setProtectedHeader(i)}return a.sign()},verifySubSignature(e,t,r,n){let a=t.protectedHeader??this.decodeProtectedHeader(t),i=t.unprotectedHeader,s=a?.kid||i?.kid,o={...e,signatures:[t]},c={protectedHeader:a,unprotectedHeader:i,kid:s},d=s?[s]:n,p=Promise.any(d.map((async e=>async function(e,t,r){if(!j(e))throw new m("General JWS must be an object");if(!Array.isArray(e.signatures)||!e.signatures.every(j))throw new m("JWS Signatures missing or incorrect type");for(const n of e.signatures)try{return await fe({header:n.header,payload:e.payload,protected:n.protected,signature:n.signature},t,r)}catch{}throw new E}(o,r[e]).then((t=>({kid:e,...t}))))));return p.catch((()=>c))},async verify(e,t,r={}){if(!this.isMultiKey(e))return super.verify(e,t,r);if(!t.signatures)return;let n=t,a=this.keyTags(e),i=await Promise.all(n.signatures.map((t=>this.verifySubSignature(n,t,e,a))));if(!i.find((e=>e.payload)))return;let[s,...o]=i,c={protectedHeader:{},unprotectedHeader:{},signers:i},d=e=>{let t=s[e],r=c[e];for(let n in t){let a=t[n];o.some((t=>t[e][n]!==a))||(r[n]=a)}};return d("protectedHeader"),d("protectedHeader"),c.payload=i.find((e=>e.payload)).payload,this.recoverDataFromContentType(c,r)}};Object.setPrototypeOf(je,xe);var Me=e=>e;function Ie(e,t){return t?e+Me(t):e}"undefined"!=typeof window&&(Me=window.prompt);const $e=new URL(import.meta.url).origin,Be=/(\S{50})(\S{2})(\S{2})(\S+)/;async function Ge(e){if(404===e.status)return"";if(!e.ok)return Promise.reject(e.statusText);let t=await e.text();return t?JSON.parse(t):t}const Fe={get origin(){return $e},tagPath:function(e,t,r="json"){if(!t)return e;let n=t.match(Be);if(!n)return`${e}/${t}`;let[a,i,s,o,c]=n;return`${e}/${i}/${s}/${o}/${c}.${r}`},mkdir:undefined,uri(e,t){return`${$e}/db/${this.tagPath(e,t)}`},store(e,t,r,n={}){return fetch(this.uri(e,t),{method:"PUT",body:JSON.stringify(r),headers:{"Content-Type":"application/json",...n.headers||{}}}).then(Ge)},retrieve(e,t,r={}){return fetch(this.uri(e,t),{cache:"default",headers:{Accept:"application/json",...r.headers||{}}}).then(Ge)}};function Ne(e,t,r=void 0){let n=e(t.slice(0,16)+"...");return Promise.reject(new Error(n,{cause:r}))}function Le(e){return Ne((e=>`The tag ${e} is not available.`),e)}class ze{static keySets={};static cached(e){return this.keySets[e]}static clear(e=null){if(!e)return ze.keySets={};delete ze.keySets[e]}constructor(e){this.tag=e,this.memberTags=[],ze.keySets[e]=this}static getUserDeviceSecret=Ie;static Storage=Fe;static async create(e){let{time:t,...r}=await this.createKeys(e),{tag:n}=r;return await this.persist(n,r,e,t),n}async destroy(e={}){let{tag:t,memberTags:r,signingKey:n}=this,a=await this.constructor.signForStorage({message:"",tag:t,memberTags:r,signingKey:n,time:Date.now()});await this.constructor.store("EncryptionKey",t,a),await this.constructor.store(this.constructor.collection,t,a),this.constructor.clear(t),e.recursiveMembers&&await Promise.allSettled(this.memberTags.map((async t=>{let r=await ze.ensure(t);await r.destroy(e)})))}decrypt(e,t){let{tag:r,decryptingKey:n}=this,a=e.recipients?{[r]:n}:n;return je.decrypt(a,e,t)}static async sign(e,{tags:t=[],team:r,member:n,time:a=r&&Date.now(),memberTags:i,signingKey:s,...o}){if(r&&!n){i||(i=(await ze.ensure(r)).memberTags),n=i.find((e=>this.cached(e)))||await Promise.any(i.map((e=>ze.ensure(e)))).then((e=>e.tag))}r&&!t.includes(r)&&(t=[r,...t]),n&&!t.includes(n)&&(t=[...t,n]);let c=await this.produceKey(t,(async e=>{let t=s||(await ze.ensure(e)).signingKey;return s=null,t}),o);return je.sign(c,e,{iss:r,act:n,iat:a,...o})}static async verify(e,t,r){let n=!e.signatures,a=await this.produceKey(t,(e=>ze.verifyingKey(e)),r,n),i=await je.verify(a,e,r),s=void 0===r.member?i?.protectedHeader.act:r.member,o=r.notBefore;function c(e){if(r.hardError)return Promise.reject(new Error(e))}if(!i)return c("Incorrect signature.");if(s){if("team"===r.member&&(s=i.protecteHeader.act,!s))return c("No member identified in signature.");if(!t.includes(s)){let n=await ze.verifyingKey(s),a={[s]:n};if(!await je.verify(a,e,r))return c("Incorrect member signature.");t.push(s),i.signers.find((e=>e.protectedHeader.kid===s)).payload=i.payload}}if(s||"team"===o){let e=i.protectedHeader.iss||i.protectedHeader.kid,t=await this.retrieve(Qe.collection,e),r=t?.json;if(s&&!e)return c("No team or main tag identified in signature");if(s&&r&&!r.recipients.find((e=>e.header.kid===s)))return c("Signer is not a member.");"team"===o&&(o=t?.protectedHeader.iat||(await this.retrieve("EncryptionKey",e))?.protectedHeader.iat)}if(o){let{iat:e}=i.protectedHeader;if(e<o)return c("Signature predates required timestamp.")}return(i.signers?.filter((e=>e.payload)).length||1)!==t.length?c("Unverified signer"):i}static async produceKey(e,t,r,n=1===e.length){if(n){let n=e[0];return r.kid=n,t(n)}let a={},i=await Promise.all(e.map((e=>t(e))));return e.forEach(((e,t)=>a[e]=i[t])),a}static verifyingKey(e){return je.importRaw(e).catch((()=>Le(e)))}static async encryptingKey(e){let t=await this.retrieve("EncryptionKey",e);return t?await je.importJWK(t.json):Le(e)}static async createKeys(e){let{publicKey:t,privateKey:r}=await je.generateSigningKey(),{publicKey:n,privateKey:a}=await je.generateEncryptingKey(),i=await je.exportRaw(t),s=await je.exportJWK(n),o=Date.now(),c=await this.signForStorage({message:s,tag:i,signingKey:r,memberTags:e,time:o});return await this.store("EncryptionKey",i,c),{signingKey:r,decryptingKey:a,tag:i,time:o}}static getWrapped(e){return this.retrieve(this.collection,e)}static async ensure(e){let t=this.cached(e),r=await qe.getWrapped(e);return r?t=new qe(e):(r=await Qe.getWrapped(e))?t=new Qe(e):(r=await Xe.getWrapped(e))&&(t=new Xe(e)),t?.cached&&t.cached===r&&t.decryptingKey&&t.signingKey?t:r?(t.cached=r,t.unwrap(t.cached).then((e=>Object.assign(t,e)),(e=>(this.clear(t.tag),Ne((e=>`You do not have access to the private key for ${e}.`),t.tag,e))))):(this.clear(e),Le(e))}static async persist(e,t,r,n=Date.now(),a=r){let{signingKey:i}=t,s=await this.wrap(t,r),o=await this.signForStorage({message:s,tag:e,signingKey:i,memberTags:a,time:n});await this.store(this.collection,e,o)}static async store(e,t,r){return e===qe.collection?je.isEmptyJWSPayload(r)?Ye.remove(t):Ye.store(t,r):ze.Storage.store(e,t,r)}static async retrieve(e,t){let r=e===qe.collection?Ye.retrieve(t):ze.Storage.retrieve(e,t),n=await r,a=n&&await ze.verifyingKey(t);if(n)return n.signatures&&(a={[t]:a}),await je.verify(a,n)}}class Ve extends ze{static signForStorage({message:e,tag:t,signingKey:r,time:n}){return this.sign(e,{tags:[t],signingKey:r,time:n})}static async wrappingKey(e,t){let r=await this.getSecret(e,t);return je.generateSecretKey(r)}static async wrap(e,t=""){let{decryptingKey:r,signingKey:n,tag:a}=e,i={decryptingKey:r,signingKey:n},s=await this.wrappingKey(a,t);return je.wrapKey(i,s,{prompt:t})}async unwrap(e){let t=e.json||e.text,r=je.decodeProtectedHeader(t).prompt,n=await this.constructor.wrappingKey(this.tag,r),a=(await je.decrypt(n,t)).json;return await je.importJWK(a,{decryptingKey:"decrypt",signingKey:"sign"})}static async getSecret(e,t){return ze.getUserDeviceSecret(e,t)}}class Xe extends Ve{static collection="KeyRecovery"}class qe extends Ve{static collection="Device"}const Ye=new class{constructor({collectionName:e="collection",dbName:t="asyncLocalStorage"}={}){this.collectionName=e,this.dbName=t,this.version=1}get db(){return this._db??=new Promise((e=>{const t=indexedDB.open(this.dbName,this.version);t.onupgradeneeded=e=>e.target.result.createObjectStore(this.collectionName),this.result(e,t)}))}transaction(e="read"){const t=this.collectionName;return this.db.then((r=>r.transaction(t,e).objectStore(t)))}result(e,t){t.onsuccess=t=>e(t.target.result||"")}retrieve(e){return new Promise((t=>{this.transaction("readonly").then((r=>this.result(t,r.get(e))))}))}store(e,t){return new Promise((r=>{this.transaction("readwrite").then((n=>this.result(r,n.put(t,e))))}))}remove(e){return new Promise((t=>{this.transaction("readwrite").then((r=>this.result(t,r.delete(e))))}))}}({collectionName:qe.collection});class Qe extends ze{static collection="Team";static signForStorage({message:e,tag:t,...r}){return this.sign(e,{team:t,...r})}static async wrap(e,t){let{decryptingKey:r,signingKey:n}=e,a={decryptingKey:r,signingKey:n},i={};return await Promise.all(t.map((e=>ze.encryptingKey(e).then((t=>i[e]=t))))),await je.wrapKey(a,i)}async unwrap(e){let{recipients:t}=e.json,r=this.memberTags=t.map((e=>e.header.kid)),n=await Promise.all(r.map((e=>Xe.getWrapped(e).catch((()=>null))))),a=r.filter(((e,t)=>n[t])),i=r.filter((e=>!a.includes(e))),s=await Promise.any(i.map((e=>ze.ensure(e)))).catch((async e=>{for(let e of a){let t=await ze.ensure(e).catch((()=>null));if(t)return t}throw e})),o=await s.decrypt(e.json);return await je.importJWK(o.json)}async changeMembership({add:e=[],remove:t=[]}={}){let{memberTags:r}=this,n=r.concat(e).filter((e=>!t.includes(e)));await this.constructor.persist(this.tag,this,n,Date.now(),r),this.memberTags=n}}var Ze={name:"@kilroy-code/distributed-security",version:"0.0.12",description:"Signed and encrypted document infrastructure based on public key encryption and self-organizing users.",type:"module",exports:{node:"./lib/api.mjs",default:"./index.mjs"},imports:{"#raw":{node:"./lib/raw-node.mjs",default:"./lib/raw-browser.mjs"},"#localStore":{node:"./lib/store-fs.mjs",default:"./lib/store-indexed.mjs"},"#mkdir":{node:"./lib/mkdir-node.mjs",default:"./lib/mkdir-browser.mjs"},"#origin":{node:"./lib/origin-node.mjs",default:"./lib/origin-browser.mjs"},"#internals":{node:"./spec/support/internals.mjs",default:"./spec/support/internal-browser-bundle.mjs"}},scripts:{build:"rollup -c","build-dev":"npx rollup -c --environment NODE_ENV:development",test:"jasmine"},repository:{type:"git",url:"git+https://github.com/kilroy-code/distributed-security.git"},publishConfig:{registry:"https://npm.pkg.github.com"},keywords:["encryption","pki","dao"],author:{name:"Howard Stearns",email:"howard@ki1r0y.com"},license:"MIT",bugs:{url:"https://github.com/kilroy-code/distributed-security/issues"},homepage:"https://github.com/kilroy-code/distributed-security#readme",devDependencies:{"@rollup/plugin-eslint":"^9.0.5","@rollup/plugin-json":"^6.1.0","@rollup/plugin-node-resolve":"^15.2.3","@rollup/plugin-terser":"^0.4.4",eslint:"^8.57.0",jasmine:"^4.5.0","jsonc-eslint-parser":"^2.4.0",rollup:"^4.13.0"},dependencies:{"@kilroy-code/jsonrpc":"^0.0.3",jose:"^5.2.3"}};const{name:et,version:tt}=Ze,rt={set Storage(e){ze.Storage=e},get Storage(){return ze.Storage},set getUserDeviceSecret(e){ze.getUserDeviceSecret=e},ready:{name:et,version:tt,origin:ze.Storage.origin},async encrypt(e,...t){let r={},n=this.canonicalizeParameters(t,r),a=await ze.produceKey(n,(e=>ze.encryptingKey(e)),r);return je.encrypt(a,e,r)},async decrypt(e,...t){let r={},[n]=this.canonicalizeParameters(t,r,e);return(await ze.ensure(n)).decrypt(e,r)},async sign(e,...t){let r={},n=this.canonicalizeParameters(t,r);return ze.sign(e,{tags:n,...r})},async verify(e,...t){let r={},n=this.canonicalizeParameters(t,r,e);return ze.verify(e,n,r)},async create(...e){if(!e.length)return await qe.create();let t=e[0].prompt;return t?await Xe.create(t):await Qe.create(e)},changeMembership:async({tag:e,...t})=>(await ze.ensure(e)).changeMembership(t),async destroy(e){"string"==typeof e&&(e={tag:e});let{tag:t,...r}=e;return(await ze.ensure(t)).destroy(r)},clear(e){ze.clear(e)},decodeProtectedHeader:je.decodeProtectedHeader,canonicalizeParameters(e,t,r){if(e.length>1||void 0!==e[0]?.length)return e;let{tags:n=[],contentType:a,time:i,...s}=e[0]||{},{team:o}=s;if(!n.length)if(e.length&&e[0].length)n=e;else if(r)if(r.signatures)n=r.signatures.map((e=>this.decodeProtectedHeader(e).kid));else if(r.recipients)n=r.recipients.map((e=>e.header.kid));else try{let e=this.decodeProtectedHeader(r).kid;e&&(n=[e])}catch(t){console.error("failure with",{rest:e,token:r,team:o,tags:n,e:t})}return o&&!n.includes(o)&&(n=[o,...n]),a&&(t.cty=a),i&&(t.iat=i),Object.assign(t,s),n}};const nt=function({target:e=self,receiver:t=e,namespace:r=t,origin:n=e!==t&&e.location.origin,dispatcherLabel:a=r.name||t.name||t.location?.href||t,targetLabel:i=e.name||n||e.location?.href||e,log:s=null,info:o=console.info.bind(console),warn:c=console.warn.bind(console),error:d=console.error.bind(console)}){const p={},l="2.0",h=e.postMessage.bind(e),u=n?e=>h(e,n):h;let y=0;return t.addEventListener("message",(async function(t){s?.(a,"got message",t.data,"from",i,t.origin);let{id:o,method:h,params:y=[],result:w,error:g,jsonrpc:f}=t.data||{};if(t.source&&t.source!==e)return d?.(a,"to",i,"got message from",t.source);if(n&&n!==t.origin)return d?.(a,n,"mismatched origin",i,t.origin);if(f!==l)return c?.(`${a} ignoring non-jsonrpc message ${JSON.stringify(t.data)}.`);if(h){let e,t=null,n=Array.isArray(y)?y:[y];try{e=await r[h](...n)}catch(e){t=function(e){let{name:t,message:r,code:n,data:a}=e;return{name:t,message:r,code:n,data:a}}(e),r[h]||t.message.includes(h)?t.message||(t.message=`${t.name||t.toString()} in ${h}.`):(t.message=`${h} is not defined.`,t.code=-32601)}if(void 0===o)return;let c=t?{id:o,error:t,jsonrpc:l}:{id:o,result:e,jsonrpc:l};return s?.(a,"answering",o,t||e,"to",i),u(c)}let m=p[o];if(delete p[o],!m)return c?.(`${a} ignoring response ${t.data}.`);g?m.reject(g):m.resolve(w)})),o?.(`${a} will dispatch to ${i}`),function(e,...t){let r=++y,n=p[r]={};return new Promise(((o,c)=>{s?.(a,"request",r,e,t,"to",i),Object.assign(n,{resolve:o,reject:c}),u({id:r,method:e,params:t,jsonrpc:l})}))}}({targetLabel:"vault:"+self.name.split("!")[1],namespace:rt});rt.Storage={store:(...e)=>nt("store",...e),retrieve:(...e)=>nt("retrieve",...e)},rt.getUserDeviceSecret=(e,t="")=>nt("getUserDeviceSecret",e,t),nt("ready",rt.ready);
