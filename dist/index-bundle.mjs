const e=new URL(import.meta.url).origin;async function t(e){if(404===e.status)return"";if(!e.ok)return Promise.reject(e.statusText);let t=await e.text();return t?JSON.parse(t):t}const r={get origin(){return e},uri:(t,r)=>`${e}/db/${t}/${r}.json`,store(e,r,n,o={}){return fetch(this.uri(e,r),{method:"PUT",body:JSON.stringify(n),headers:{"Content-Type":"application/json",...o.headers||{}}}).then(t)},retrieve(e,r,n={}){return fetch(this.uri(e,r),{cache:"default",headers:{Accept:"application/json",...n.headers||{}}}).then(t)}};var n=e=>e;"undefined"!=typeof window&&(n=window.prompt);const o=new URL(import.meta.url),a=new URL("vault.html",o),s=document.createElement("iframe"),i=new MessageChannel,c=Object.assign({log(...e){console.log(...e)},getUserDeviceSecret:function(e,t){return t?e+n(t):e}},r),d=new Promise((e=>{c.ready=e,s.style.display="none",document.body.append(s),s.setAttribute("src",a),s.contentWindow.name="vault!"+o.href,i.port1.start(),s.onload=()=>s.contentWindow.postMessage("initializePort",a.origin,[i.port2])})),l=function({target:e=self,receiver:t=e,namespace:r=t,origin:n=e!==t&&e.location.origin,dispatcherLabel:o=r.name||t.name||t.location?.href||t,targetLabel:a=e.name||n||e.location?.href||e,log:s=null,info:i=console.info.bind(console),warn:c=console.warn.bind(console),error:d=console.error.bind(console)}){const l={},g="2.0",u=e.postMessage.bind(e),m=n?e=>u(e,n):u;let p=0;return t.addEventListener("message",(async function(t){s?.(o,"got message",t.data,"from",a,t.origin);let{id:i,method:u,params:p=[],result:f,error:h,jsonrpc:y}=t.data||{};if(t.source&&t.source!==e)return d?.(o,"to",a,"got message from",t.source);if(n&&n!==t.origin)return d?.(o,n,"mismatched origin",a,t.origin);if(y!==g)return c?.(`${o} ignoring non-jsonrpc message ${JSON.stringify(t.data)}.`);if(u){let e,t=null,n=Array.isArray(p)?p:[p];try{e=await r[u](...n)}catch(e){t=function(e){let{name:t,message:r,code:n,data:o}=e;return{name:t,message:r,code:n,data:o}}(e),r[u]||t.message.includes(u)?t.message||(t.message=`${t.name||t.toString()} in ${u}.`):(t.message=`${u} is not defined.`,t.code=-32601)}if(void 0===i)return;let c=t?{id:i,error:t,jsonrpc:g}:{id:i,result:e,jsonrpc:g};return s?.(o,"answering",i,t||e,"to",a),m(c)}let w=l[i];if(delete l[i],!w)return c?.(`${o} ignoring response ${t.data}.`);h?w.reject(h):w.resolve(f)})),i?.(`${o} will dispatch to ${a}`),function(e,...t){let r=++p,n=l[r]={};return new Promise(((i,c)=>{s?.(o,"request",r,e,t,"to",a),Object.assign(n,{resolve:i,reject:c}),m({id:r,method:e,params:t,jsonrpc:g})}))}}({dispatcherLabel:"entry!"+o.href,namespace:c,target:i.port1,targetLabel:s.contentWindow.name}),g={sign:(e,...t)=>l("sign",e,...t),verify:(e,...t)=>l("verify",e,...t),encrypt:(e,...t)=>l("encrypt",e,...t),decrypt:(e,...t)=>l("decrypt",e,...t),create:(...e)=>l("create",...e),changeMembership:({tag:e,add:t,remove:r}={})=>l("changeMembership",{tag:e,add:t,remove:r}),destroy:e=>l("destroy",e),clear:(e=null)=>l("clear",e),ready:d,get Storage(){return c},set Storage(e){Object.assign(c,e)},set getUserDeviceSecret(e){c.getUserDeviceSecret=e}};export{g as default};
